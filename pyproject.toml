[tool.poetry]
name = "fractal"
version = "0.1.0"
description = ""
authors = ["Jacopo Nespolo <jacopo.nespolo@exact-lab.it>",
           "Marco Franzon <marco.franzon@exact-lab.it>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.8"
python-dotenv = "^0.20.0"

[tool.poetry.group.server]
optional = true
[tool.poetry.group.server.dependencies]
uvicorn = {version="^0.17.6"}
fastapi = {version="^0.78.0"}
python-jose = "^3.3.0"
python-multipart = "^0.0.5"
fastapi-users = {extras = ["sqlalchemy", "oauth"], version = "^10.1.1"}
sqlmodel = "^0.0.6"
aiosqlite = "^0.17.0"
PyJWT = "^2.4.0"
fastapi-users-db-sqlmodel = "^0.2.0"

[tool.poetry.group.client]
optional = true
[tool.poetry.group.client.dependencies]
click = {version="^8.0.3"}

[tool.poetry.group.runner]
optional = true
[tool.poetry.group.runner.dependencies]
pandas = {version="^1.3.0"}
numpy = {version="^1.22.1"}
Pillow = {version="^9.0.0"}
tifffile = {version="^2021.11.2"}
dask = {version="^2022.2.0"}
imagecodecs = {version="^2022.2.22"}
zarr = {version="^2.11.0"}
scikit-image = {version="^0.19.2"}
templates = {version="^0.0.5"}
parsl = {extras = ["monitoring"], git="https://github.com/jacopo-exact/parsl.git", branch="sqlalchemy-version"}

[tool.poetry.group.dev.dependencies]
sphinx-rtd-theme = {version="^1.0.0"}
devtools = "^0.8.0"
pyflakes = "^2.4.0"
pytest = "^7.1.2"
Sphinx = "^4.5.0"
asgi-lifespan = "^1.0.1"
pytest-mock = "^3.7.0"
pytest-asyncio = "^0.18.3"
pre-commit = "^2.19.0"
bumpver = "^2022.1116"
httpx = "^0.23.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
asyncio_mode = "auto"

[tool.bumpver]
current_version = "0.1.0"
version_pattern = "MAJOR.MINOR.PATCH"
commit_message = "bump version {old_version} -> {new_version}"
commit = true
tag = true
push = true

[tool.bumpver.file_patterns]
"pyproject.toml" = [
    'version = "{version}"',
]
"fractal/server/config.py" = [
    '__VERSION__ = "{version}"'
]
"README.md" = [
    "{version}",
    "{pep440_version}",
]

[tool.poetry.scripts]
server = "scripts.testserver:run_testserver"
