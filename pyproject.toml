[tool.poetry]
name = "fractal-server"
version = "2.2.0"
description = "Server component of the Fractal analytics platform"
authors = [
    "Tommaso Comparin <tommaso.comparin@exact-lab.it>",
    "Marco Franzon <marco.franzon@exact-lab.it>",
    "Yuri Chiucconi <yuri.chiucconi@exact-lab.it>",
    "Jacopo Nespolo <jacopo.nespolo@exact-lab.it>",
]
readme = "README.md"
homepage = "https://github.com/fractal-analytics-platform/fractal-server"
repository = "https://github.com/fractal-analytics-platform/fractal-server"
documentation = "https://fractal-analytics-platform.github.io/fractal-server"
license = "BSD-3-Clause"
exclude = [
"fractal_server/.gitignore",
"fractal_server/data_migrations/old",
"fractal_server/json_schemas",
]

[tool.poetry.urls]
"Changelog" = "https://github.com/fractal-analytics-platform/fractal-server/blob/main/CHANGELOG.md"


[tool.poetry.dependencies]
python = "^3.9"
python-dotenv = "^1.0.0"
fastapi = "^0.110.0"
sqlmodel = "^0.0.16"
sqlalchemy = {extras = ["asyncio"], version = ">=2.0.23,<2.1"}
aiosqlite = "^0.19.0"
fastapi-users = {extras = ["oauth"], version = "^12.1.0"}
alembic = "^1.13.1"
uvicorn = "^0.29.0"
pydantic = ">=1.10.8,<2"
bcrypt = "4.0.1"
packaging = "^23.2"
clusterfutures = "^0.5"
cloudpickle = ">=3.0.0,<3.1.0"

asyncpg = { version = "^0.29.0", optional = true }
gunicorn = { version = ">=21.2,<23.0", optional = true }
psycopg = { version = "^3.1.0", extras=["binary"], optional=true }
psycopg2 = { version = "^2.9.5", optional = true }
psutil = "^5.9.8"

[tool.poetry.extras]
postgres = ["asyncpg", "psycopg2"]
gunicorn = ["gunicorn"]
postgres-psycopg-binary = ["psycopg"]

[tool.poetry.group.dev.dependencies]
asgi-lifespan = "^2"
pytest = "8.1.*"
httpx = "^0.23"
devtools = "^0.12"
pytest-asyncio = "^0.21"
bumpver = "^2022.1120"
pre-commit = "^2.19"
coverage = {extras = ["toml"], version = "7.5.*"}
pytest-docker = {version = "3.1.*"}
mypy = "^1.9"
pytest-subprocess = "^1.5"
pyyaml="^6.0.1"
a2wsgi = "^1.10.0"
jinja2 = "^3.1.3"
fabric = "^3.2.2"

[tool.poetry.group.docs.dependencies]

mkdocs="1.5.3"
mkdocstrings = { extras = ["python"], version = "0.24.3" }
mkdocs-material="9.5.17"
mkdocs-gen-files="0.5.0"
mkdocs-literate-nav="0.6.1"
mkdocs-section-index="0.3.8"
mkdocs-render-swagger-plugin="0.1.1"
pyyaml="^6.0.1"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
asyncio_mode = "auto"
filterwarnings = [
    "error::RuntimeWarning",
    "error::pytest.PytestUnraisableExceptionWarning",
]

[tool.bumpver]
current_version = "2.2.0"
version_pattern = "MAJOR.MINOR.PATCH[PYTAGNUM]"
commit_message = "bump version {old_version} -> {new_version}"
commit = true
tag = true
push = true

[tool.bumpver.file_patterns]
"pyproject.toml" = [
    'version = "{version}"$',
]
"fractal_server/__init__.py" = [
    '__VERSION__ = "{version}"$'
]

[tool.poetry.scripts]
fractalctl = "fractal_server.__main__:run"

[tool.coverage.run]
branch = true
parallel = true
relative_files = true
omit = ["tests/*", "benchmarks/*", "fractal_server/json_schemas/*"]

[[tool.mypy.overrides]]
module = ["devtools", "uvicorn", "pytest", "asgi_lifespan", "asyncpg"]
ignore_missing_imports = true
