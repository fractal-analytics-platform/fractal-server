"""TMP - split Task and WFTask meta

Revision ID: 876f28db9d4e
Revises: b9e9eed9d442
Create Date: 2024-03-27 14:35:50.076725

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "876f28db9d4e"
down_revision = "b9e9eed9d442"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("taskv2", schema=None) as batch_op:
        batch_op.add_column(
            sa.Column("meta_non_parallel", sa.JSON(), nullable=True)
        )
        batch_op.add_column(
            sa.Column("meta_parallel", sa.JSON(), nullable=True)
        )
        batch_op.drop_column("meta")

    with op.batch_alter_table("workflowtaskv2", schema=None) as batch_op:
        batch_op.add_column(
            sa.Column("meta_parallel", sa.JSON(), nullable=True)
        )
        batch_op.add_column(
            sa.Column("meta_non_parallel", sa.JSON(), nullable=True)
        )
        batch_op.drop_column("meta")

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("workflowtaskv2", schema=None) as batch_op:
        batch_op.add_column(
            sa.Column(
                "meta",
                postgresql.JSON(astext_type=sa.Text()),
                autoincrement=False,
                nullable=True,
            )
        )
        batch_op.drop_column("meta_non_parallel")
        batch_op.drop_column("meta_parallel")

    with op.batch_alter_table("taskv2", schema=None) as batch_op:
        batch_op.add_column(
            sa.Column(
                "meta",
                postgresql.JSON(astext_type=sa.Text()),
                autoincrement=False,
                nullable=True,
            )
        )
        batch_op.drop_column("meta_parallel")
        batch_op.drop_column("meta_non_parallel")

    # ### end Alembic commands ###
