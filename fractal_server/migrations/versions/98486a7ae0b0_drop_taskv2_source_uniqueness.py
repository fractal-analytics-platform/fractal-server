"""drop taskv2.source uniqueness

Revision ID: 98486a7ae0b0
Revises: d82ee0dc1e48
Create Date: 2024-10-09 15:40:48.367151

"""
from alembic import op

# revision identifiers, used by Alembic.
revision = "98486a7ae0b0"
down_revision = "d82ee0dc1e48"
branch_labels = None
depends_on = None


def upgrade() -> None:

    try:
        with op.batch_alter_table("taskv2", schema=None) as batch_op:
            batch_op.drop_constraint("uq_taskv2_source", type_="unique")
    except BaseException as e:
        if op.get_bind().dialect.name != "sqlite":
            raise e
        import sqlite3
        import logging

        logger = logging.getLogger("alembic.runtime.migration")
        logger.warning(
            f"Using sqlite, with {sqlite3.version=} and "
            f"{sqlite3.sqlite_version=}"
        )

        logger.warning(
            "Could not drop 'uq_taskv2_source' constraint; this is expected "
            "when the database was created before the naming convention "
            "was added."
        )
        logger.warning(
            "As a workaround, we recreate the constraint before dropping it."
        )
        with op.batch_alter_table("taskv2", schema=None) as batch_op:
            batch_op.create_unique_constraint("uq_taskv2_source", ["source"])
            batch_op.drop_constraint("uq_taskv2_source", type_="unique")


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("taskv2", schema=None) as batch_op:
        batch_op.create_unique_constraint("uq_taskv2_source", ["source"])

    # ### end Alembic commands ###
