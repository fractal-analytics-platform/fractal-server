{"openapi": "3.1.0", "info": {"title": "FastAPI", "version": "0.1.0"}, "paths": {"/api/alive/": {"get": {"summary": "Alive", "operationId": "alive_api_alive__get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/settings/app/": {"get": {"summary": "View Settings", "operationId": "view_settings_api_settings_app__get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}}, "/api/settings/database/": {"get": {"summary": "View Db Settings", "operationId": "view_db_settings_api_settings_database__get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}}, "/api/settings/email/": {"get": {"summary": "View Email Settings", "operationId": "view_email_settings_api_settings_email__get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}}, "/api/settings/data/": {"get": {"summary": "View Data Settings", "operationId": "view_data_settings_api_settings_data__get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}}, "/api/settings/oauth/": {"get": {"summary": "View Oauth Settings", "operationId": "view_oauth_settings_api_settings_oauth__get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}}, "/api/v2/project/{project_id}/dataset/": {"post": {"tags": ["V2 Dataset"], "summary": "Create Dataset", "description": "Add new dataset to current project", "operationId": "create_dataset_api_v2_project__project_id__dataset__post", "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}], "parameters": [{"name": "project_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Project Id"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/DatasetCreateV2"}}}}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/DatasetReadV2"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "get": {"tags": ["V2 Dataset"], "summary": "Read Dataset List", "description": "Get dataset list for given project", "operationId": "read_dataset_list_api_v2_project__project_id__dataset__get", "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}], "parameters": [{"name": "project_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Project Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/DatasetReadV2"}, "title": "Response Read Dataset List Api V2 Project  Project Id  Dataset  Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v2/project/{project_id}/dataset/{dataset_id}/": {"get": {"tags": ["V2 Dataset"], "summary": "Read Dataset", "description": "Get info on a dataset associated to the current project", "operationId": "read_dataset_api_v2_project__project_id__dataset__dataset_id___get", "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}], "parameters": [{"name": "project_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Project Id"}}, {"name": "dataset_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Dataset Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/DatasetReadV2"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "patch": {"tags": ["V2 Dataset"], "summary": "Update Dataset", "description": "Edit a dataset associated to the current project", "operationId": "update_dataset_api_v2_project__project_id__dataset__dataset_id___patch", "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}], "parameters": [{"name": "project_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Project Id"}}, {"name": "dataset_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Dataset Id"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/DatasetUpdateV2"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/DatasetReadV2"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["V2 Dataset"], "summary": "Delete Dataset", "description": "Delete a dataset associated to the current project", "operationId": "delete_dataset_api_v2_project__project_id__dataset__dataset_id___delete", "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}], "parameters": [{"name": "project_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Project Id"}}, {"name": "dataset_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Dataset Id"}}], "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v2/dataset/": {"get": {"tags": ["V2 Dataset"], "summary": "Get User Datasets", "description": "Returns all the datasets of the current user", "operationId": "get_user_datasets_api_v2_dataset__get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/DatasetReadV2"}, "type": "array", "title": "Response Get User Datasets Api V2 Dataset  Get"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}}, "/api/v2/project/{project_id}/dataset/{dataset_id}/export/": {"get": {"tags": ["V2 Dataset"], "summary": "Export Dataset", "description": "Export an existing dataset", "operationId": "export_dataset_api_v2_project__project_id__dataset__dataset_id__export__get", "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}], "parameters": [{"name": "project_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Project Id"}}, {"name": "dataset_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Dataset Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/DatasetExportV2"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v2/project/{project_id}/dataset/import/": {"post": {"tags": ["V2 Dataset"], "summary": "Import Dataset", "description": "Import an existing dataset into a project", "operationId": "import_dataset_api_v2_project__project_id__dataset_import__post", "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}], "parameters": [{"name": "project_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Project Id"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/DatasetImportV2"}}}}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/DatasetReadV2"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v2/project/{project_id}/dataset/{dataset_id}/images/verify-unique-types/": {"post": {"tags": ["V2 Job"], "summary": "Verify Unique Types", "operationId": "verify_unique_types_api_v2_project__project_id__dataset__dataset_id__images_verify_unique_types__post", "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}], "parameters": [{"name": "project_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Project Id"}}, {"name": "dataset_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Dataset Id"}}, {"name": "workflowtask_id", "in": "query", "required": true, "schema": {"type": "integer", "title": "Workflowtask Id"}}], "requestBody": {"content": {"application/json": {"schema": {"anyOf": [{"$ref": "#/components/schemas/ImageQuery"}, {"type": "null"}], "title": "Query"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"type": "string"}, "title": "Response Verify Unique Types Api V2 Project  Project Id  Dataset  Dataset Id  Images Verify Unique Types  Post"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v2/project/{project_id}/dataset/{dataset_id}/images/non-processed/": {"post": {"tags": ["V2 Job"], "summary": "Check Non Processed Images", "operationId": "check_non_processed_images_api_v2_project__project_id__dataset__dataset_id__images_non_processed__post", "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}], "parameters": [{"name": "project_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Project Id"}}, {"name": "dataset_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Dataset Id"}}, {"name": "workflow_id", "in": "query", "required": true, "schema": {"type": "integer", "title": "Workflow Id"}}, {"name": "workflowtask_id", "in": "query", "required": true, "schema": {"type": "integer", "title": "Workflowtask Id"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NonProcessedImagesPayload"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v2/job/": {"get": {"tags": ["V2 Job"], "summary": "Get User Jobs", "description": "Returns all the jobs of the current user", "operationId": "get_user_jobs_api_v2_job__get", "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}], "parameters": [{"name": "log", "in": "query", "required": false, "schema": {"type": "boolean", "default": true, "title": "Log"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/JobReadV2"}, "title": "Response Get User Jobs Api V2 Job  Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v2/project/{project_id}/workflow/{workflow_id}/job/": {"get": {"tags": ["V2 Job"], "summary": "Get Workflow Jobs", "description": "Returns all the jobs related to a specific workflow", "operationId": "get_workflow_jobs_api_v2_project__project_id__workflow__workflow_id__job__get", "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}], "parameters": [{"name": "project_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Project Id"}}, {"name": "workflow_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Workflow Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/JobReadV2"}, "title": "Response Get Workflow Jobs Api V2 Project  Project Id  Workflow  Workflow Id  Job  Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v2/project/{project_id}/latest-job/": {"get": {"tags": ["V2 Job"], "summary": "Get Latest Job", "operationId": "get_latest_job_api_v2_project__project_id__latest_job__get", "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}], "parameters": [{"name": "project_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Project Id"}}, {"name": "workflow_id", "in": "query", "required": true, "schema": {"type": "integer", "title": "Workflow Id"}}, {"name": "dataset_id", "in": "query", "required": true, "schema": {"type": "integer", "title": "Dataset Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/JobReadV2"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v2/project/{project_id}/job/{job_id}/": {"get": {"tags": ["V2 Job"], "summary": "Read Job", "description": "Return info on an existing job", "operationId": "read_job_api_v2_project__project_id__job__job_id___get", "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}], "parameters": [{"name": "project_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Project Id"}}, {"name": "job_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Job Id"}}, {"name": "show_tmp_logs", "in": "query", "required": false, "schema": {"type": "boolean", "default": false, "title": "Show Tmp Logs"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/JobReadV2"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v2/project/{project_id}/job/{job_id}/download/": {"get": {"tags": ["V2 Job"], "summary": "Download Job Logs", "description": "Download zipped job folder", "operationId": "download_job_logs_api_v2_project__project_id__job__job_id__download__get", "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}], "parameters": [{"name": "project_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Project Id"}}, {"name": "job_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Job Id"}}], "responses": {"200": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v2/project/{project_id}/job/": {"get": {"tags": ["V2 Job"], "summary": "Get Job List", "description": "Get job list for given project", "operationId": "get_job_list_api_v2_project__project_id__job__get", "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}], "parameters": [{"name": "project_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Project Id"}}, {"name": "log", "in": "query", "required": false, "schema": {"type": "boolean", "default": true, "title": "Log"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/JobReadV2"}, "title": "Response Get Job List Api V2 Project  Project Id  Job  Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v2/project/{project_id}/job/{job_id}/stop/": {"get": {"tags": ["V2 Job"], "summary": "Stop Job", "description": "Stop execution of a workflow job.", "operationId": "stop_job_api_v2_project__project_id__job__job_id__stop__get", "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}], "parameters": [{"name": "project_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Project Id"}}, {"name": "job_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Job Id"}}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v2/project/{project_id}/dataset/{dataset_id}/images/": {"post": {"tags": ["V2 Images"], "summary": "Post New Image", "operationId": "post_new_image_api_v2_project__project_id__dataset__dataset_id__images__post", "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}], "parameters": [{"name": "project_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Project Id"}}, {"name": "dataset_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Dataset Id"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SingleImage"}}}}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["V2 Images"], "summary": "Delete Dataset Images", "operationId": "delete_dataset_images_api_v2_project__project_id__dataset__dataset_id__images__delete", "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}], "parameters": [{"name": "project_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Project Id"}}, {"name": "dataset_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Dataset Id"}}, {"name": "zarr_url", "in": "query", "required": true, "schema": {"type": "string", "title": "Zarr Url"}}], "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "patch": {"tags": ["V2 Images"], "summary": "Patch Dataset Image", "operationId": "patch_dataset_image_api_v2_project__project_id__dataset__dataset_id__images__patch", "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}], "parameters": [{"name": "project_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Project Id"}}, {"name": "dataset_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Dataset Id"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SingleImageUpdate"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SingleImage"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v2/project/{project_id}/dataset/{dataset_id}/images/query/": {"post": {"tags": ["V2 Images"], "summary": "Query Dataset Images", "operationId": "query_dataset_images_api_v2_project__project_id__dataset__dataset_id__images_query__post", "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}], "parameters": [{"name": "project_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Project Id"}}, {"name": "dataset_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Dataset Id"}}, {"name": "page", "in": "query", "required": false, "schema": {"type": "integer", "default": 1, "title": "Page"}}, {"name": "page_size", "in": "query", "required": false, "schema": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Page Size"}}], "requestBody": {"content": {"application/json": {"schema": {"anyOf": [{"$ref": "#/components/schemas/ImageQueryWithZarrUrl"}, {"type": "null"}], "title": "Query"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ImagePage"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v2/project/": {"get": {"tags": ["V2 Project"], "summary": "Get List Project", "description": "Return list of projects user is member of", "operationId": "get_list_project_api_v2_project__get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/ProjectReadV2"}, "type": "array", "title": "Response Get List Project Api V2 Project  Get"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}, "post": {"tags": ["V2 Project"], "summary": "Create Project", "description": "Create new project", "operationId": "create_project_api_v2_project__post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ProjectCreateV2"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ProjectReadV2"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}}, "/api/v2/project/{project_id}/": {"get": {"tags": ["V2 Project"], "summary": "Read Project", "description": "Return info on an existing project", "operationId": "read_project_api_v2_project__project_id___get", "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}], "parameters": [{"name": "project_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Project Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ProjectReadV2"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "patch": {"tags": ["V2 Project"], "summary": "Update Project", "operationId": "update_project_api_v2_project__project_id___patch", "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}], "parameters": [{"name": "project_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Project Id"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ProjectUpdateV2"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ProjectReadV2"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["V2 Project"], "summary": "Delete Project", "description": "Delete project", "operationId": "delete_project_api_v2_project__project_id___delete", "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}], "parameters": [{"name": "project_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Project Id"}}], "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v2/project/{project_id}/job/submit/": {"post": {"tags": ["V2 Job"], "summary": "Apply Workflow", "operationId": "apply_workflow_api_v2_project__project_id__job_submit__post", "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}], "parameters": [{"name": "project_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Project Id"}}, {"name": "workflow_id", "in": "query", "required": true, "schema": {"type": "integer", "title": "Workflow Id"}}, {"name": "dataset_id", "in": "query", "required": true, "schema": {"type": "integer", "title": "Dataset Id"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/JobCreateV2"}}}}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/JobReadV2"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v2/project/{project_id}/status/": {"get": {"tags": ["V2 History"], "summary": "Get Workflow Tasks Statuses", "operationId": "get_workflow_tasks_statuses_api_v2_project__project_id__status__get", "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}], "parameters": [{"name": "project_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Project Id"}}, {"name": "dataset_id", "in": "query", "required": true, "schema": {"type": "integer", "title": "Dataset Id"}}, {"name": "workflow_id", "in": "query", "required": true, "schema": {"type": "integer", "title": "Workflow Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v2/project/{project_id}/status/run/": {"get": {"tags": ["V2 History"], "summary": "Get History Run List", "operationId": "get_history_run_list_api_v2_project__project_id__status_run__get", "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}], "parameters": [{"name": "project_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Project Id"}}, {"name": "dataset_id", "in": "query", "required": true, "schema": {"type": "integer", "title": "Dataset Id"}}, {"name": "workflowtask_id", "in": "query", "required": true, "schema": {"type": "integer", "title": "Workflowtask Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/HistoryRunReadAggregated-Output"}, "title": "Response Get History Run List Api V2 Project  Project Id  Status Run  Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v2/project/{project_id}/status/run/{history_run_id}/units/": {"get": {"tags": ["V2 History"], "summary": "Get History Run Units", "operationId": "get_history_run_units_api_v2_project__project_id__status_run__history_run_id__units__get", "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}], "parameters": [{"name": "project_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Project Id"}}, {"name": "history_run_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "History Run Id"}}, {"name": "dataset_id", "in": "query", "required": true, "schema": {"type": "integer", "title": "Dataset Id"}}, {"name": "workflowtask_id", "in": "query", "required": true, "schema": {"type": "integer", "title": "Workflowtask Id"}}, {"name": "unit_status", "in": "query", "required": false, "schema": {"anyOf": [{"$ref": "#/components/schemas/HistoryUnitStatus"}, {"type": "null"}], "title": "Unit Status"}}, {"name": "page", "in": "query", "required": false, "schema": {"type": "integer", "default": 1, "title": "Page"}}, {"name": "page_size", "in": "query", "required": false, "schema": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Page Size"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/PaginationResponse_HistoryUnitRead_"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v2/project/{project_id}/status/images/": {"post": {"tags": ["V2 History"], "summary": "Get History Images", "operationId": "get_history_images_api_v2_project__project_id__status_images__post", "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}], "parameters": [{"name": "project_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Project Id"}}, {"name": "dataset_id", "in": "query", "required": true, "schema": {"type": "integer", "title": "Dataset Id"}}, {"name": "workflowtask_id", "in": "query", "required": true, "schema": {"type": "integer", "title": "Workflowtask Id"}}, {"name": "page", "in": "query", "required": false, "schema": {"type": "integer", "default": 1, "title": "Page"}}, {"name": "page_size", "in": "query", "required": false, "schema": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Page Size"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ImageQuery"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ImagePage"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v2/project/{project_id}/status/image-log/": {"post": {"tags": ["V2 History"], "summary": "Get Image Log", "operationId": "get_image_log_api_v2_project__project_id__status_image_log__post", "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}], "parameters": [{"name": "project_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Project Id"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ImageLogsRequest"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v2/project/{project_id}/status/unit-log/": {"get": {"tags": ["V2 History"], "summary": "Get History Unit Log", "operationId": "get_history_unit_log_api_v2_project__project_id__status_unit_log__get", "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}], "parameters": [{"name": "project_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Project Id"}}, {"name": "history_run_id", "in": "query", "required": true, "schema": {"type": "integer", "title": "History Run Id"}}, {"name": "history_unit_id", "in": "query", "required": true, "schema": {"type": "integer", "title": "History Unit Id"}}, {"name": "workflowtask_id", "in": "query", "required": true, "schema": {"type": "integer", "title": "Workflowtask Id"}}, {"name": "dataset_id", "in": "query", "required": true, "schema": {"type": "integer", "title": "Dataset Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v2/project/{project_id}/dataset/{dataset_id}/history/": {"get": {"tags": ["V2 History"], "summary": "Get Dataset History", "description": "Returns a list of all HistoryRuns associated to a given dataset, sorted by\ntimestamp.", "operationId": "get_dataset_history_api_v2_project__project_id__dataset__dataset_id__history__get", "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}], "parameters": [{"name": "project_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Project Id"}}, {"name": "dataset_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Dataset Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/HistoryRunRead-Output"}, "title": "Response Get Dataset History Api V2 Project  Project Id  Dataset  Dataset Id  History  Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v2/project/{project_id}/status-legacy/": {"get": {"tags": ["V2 Status Legacy"], "summary": "Get Workflowtask Status", "description": "Extract the status of all `WorkflowTaskV2` of a given `WorkflowV2` that ran\non a given `DatasetV2`.\n\n*NOTE*: the current endpoint is not guaranteed to provide consistent\nresults if the workflow task list is modified in a non-trivial way\n(that is, by adding intermediate tasks, removing tasks, or changing their\norder). See fractal-server GitHub issues: 793, 1083.", "operationId": "get_workflowtask_status_api_v2_project__project_id__status_legacy__get", "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}], "parameters": [{"name": "project_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Project Id"}}, {"name": "dataset_id", "in": "query", "required": true, "schema": {"type": "integer", "title": "Dataset Id"}}, {"name": "workflow_id", "in": "query", "required": true, "schema": {"type": "integer", "title": "Workflow Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/LegacyStatusReadV2"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v2/task/collect/pip/": {"post": {"tags": ["V2 Task Lifecycle"], "summary": "Collect Tasks Pip", "description": "Task-collection endpoint", "operationId": "collect_tasks_pip_api_v2_task_collect_pip__post", "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}], "parameters": [{"name": "private", "in": "query", "required": false, "schema": {"type": "boolean", "default": false, "title": "Private"}}, {"name": "user_group_id", "in": "query", "required": false, "schema": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "User Group Id"}}], "requestBody": {"content": {"multipart/form-data": {"schema": {"$ref": "#/components/schemas/Body_collect_tasks_pip_api_v2_task_collect_pip__post"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskGroupActivityV2Read"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v2/task/collect/custom/": {"post": {"tags": ["V2 Task Lifecycle"], "summary": "Collect Task Custom", "operationId": "collect_task_custom_api_v2_task_collect_custom__post", "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}], "parameters": [{"name": "private", "in": "query", "required": false, "schema": {"type": "boolean", "default": false, "title": "Private"}}, {"name": "user_group_id", "in": "query", "required": false, "schema": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "User Group Id"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskCollectCustomV2"}}}}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/TaskReadV2"}, "title": "Response Collect Task Custom Api V2 Task Collect Custom  Post"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v2/task/collect/pixi/": {"post": {"tags": ["V2 Task Lifecycle"], "summary": "Collect Task Pixi", "operationId": "collect_task_pixi_api_v2_task_collect_pixi__post", "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}], "parameters": [{"name": "private", "in": "query", "required": false, "schema": {"type": "boolean", "default": false, "title": "Private"}}, {"name": "user_group_id", "in": "query", "required": false, "schema": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "User Group Id"}}], "requestBody": {"required": true, "content": {"multipart/form-data": {"schema": {"$ref": "#/components/schemas/Body_collect_task_pixi_api_v2_task_collect_pixi__post"}}}}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskGroupActivityV2Read"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v2/task-group/{task_group_id}/deactivate/": {"post": {"tags": ["V2 Task Lifecycle"], "summary": "Deactivate Task Group", "description": "Deactivate task-group venv", "operationId": "deactivate_task_group_api_v2_task_group__task_group_id__deactivate__post", "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}], "parameters": [{"name": "task_group_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Task Group Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskGroupActivityV2Read"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v2/task-group/{task_group_id}/reactivate/": {"post": {"tags": ["V2 Task Lifecycle"], "summary": "Reactivate Task Group", "description": "Deactivate task-group venv", "operationId": "reactivate_task_group_api_v2_task_group__task_group_id__reactivate__post", "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}], "parameters": [{"name": "task_group_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Task Group Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskGroupActivityV2Read"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v2/task-group/{task_group_id}/delete/": {"post": {"tags": ["V2 Task Lifecycle"], "summary": "Delete Task Group", "description": "Deletion of task-group from db and file system", "operationId": "delete_task_group_api_v2_task_group__task_group_id__delete__post", "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}], "parameters": [{"name": "task_group_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Task Group Id"}}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskGroupActivityV2Read"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v2/task/": {"get": {"tags": ["V2 Task"], "summary": "Get List Task", "description": "Get list of available tasks", "operationId": "get_list_task_api_v2_task__get", "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}], "parameters": [{"name": "args_schema", "in": "query", "required": false, "schema": {"type": "boolean", "default": true, "title": "Args Schema"}}, {"name": "category", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Category"}}, {"name": "modality", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Modality"}}, {"name": "author", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Author"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/TaskReadV2"}, "title": "Response Get List Task Api V2 Task  Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "post": {"tags": ["V2 Task"], "summary": "Create Task", "description": "Create a new task", "operationId": "create_task_api_v2_task__post", "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}], "parameters": [{"name": "user_group_id", "in": "query", "required": false, "schema": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "User Group Id"}}, {"name": "private", "in": "query", "required": false, "schema": {"type": "boolean", "default": false, "title": "Private"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskCreateV2"}}}}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskReadV2"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v2/task/{task_id}/": {"get": {"tags": ["V2 Task"], "summary": "Get Task", "description": "Get info on a specific task", "operationId": "get_task_api_v2_task__task_id___get", "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}], "parameters": [{"name": "task_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Task Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskReadV2"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "patch": {"tags": ["V2 Task"], "summary": "Patch Task", "description": "Edit a specific task (restricted to task owner)", "operationId": "patch_task_api_v2_task__task_id___patch", "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}], "parameters": [{"name": "task_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Task Id"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskUpdateV2"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskReadV2"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["V2 Task"], "summary": "Delete Task", "description": "Delete a task", "operationId": "delete_task_api_v2_task__task_id___delete", "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}], "parameters": [{"name": "task_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Task Id"}}], "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v2/project/{project_id}/workflow/{workflow_id}/version-update-candidates/": {"get": {"tags": ["V2 Task"], "summary": "Get Workflow Version Update Candidates", "operationId": "get_workflow_version_update_candidates_api_v2_project__project_id__workflow__workflow_id__version_update_candidates__get", "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}], "parameters": [{"name": "project_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Project Id"}}, {"name": "workflow_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Workflow Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"type": "array", "items": {"$ref": "#/components/schemas/TaskVersionRead"}}, "title": "Response Get Workflow Version Update Candidates Api V2 Project  Project Id  Workflow  Workflow Id  Version Update Candidates  Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v2/project/{project_id}/workflow/{workflow_id}/wftask/replace-task/": {"post": {"tags": ["V2 Task"], "summary": "Replace Workflowtask", "operationId": "replace_workflowtask_api_v2_project__project_id__workflow__workflow_id__wftask_replace_task__post", "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}], "parameters": [{"name": "project_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Project Id"}}, {"name": "workflow_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Workflow Id"}}, {"name": "workflow_task_id", "in": "query", "required": true, "schema": {"type": "integer", "title": "Workflow Task Id"}}, {"name": "task_id", "in": "query", "required": true, "schema": {"type": "integer", "title": "Task Id"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/WorkflowTaskReplaceV2"}}}}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/WorkflowTaskReadV2"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v2/task-group/activity/": {"get": {"tags": ["V2 TaskGroup"], "summary": "Get Task Group Activity List", "operationId": "get_task_group_activity_list_api_v2_task_group_activity__get", "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}], "parameters": [{"name": "task_group_activity_id", "in": "query", "required": false, "schema": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Task Group Activity Id"}}, {"name": "taskgroupv2_id", "in": "query", "required": false, "schema": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Taskgroupv2 Id"}}, {"name": "pkg_name", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Pkg Name"}}, {"name": "status", "in": "query", "required": false, "schema": {"anyOf": [{"$ref": "#/components/schemas/TaskGroupActivityStatusV2"}, {"type": "null"}], "title": "Status"}}, {"name": "action", "in": "query", "required": false, "schema": {"anyOf": [{"$ref": "#/components/schemas/TaskGroupActivityActionV2"}, {"type": "null"}], "title": "Action"}}, {"name": "timestamp_started_min", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string", "format": "date-time"}, {"type": "null"}], "title": "Timestamp Started Min"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/TaskGroupActivityV2Read"}, "title": "Response Get Task Group Activity List Api V2 Task Group Activity  Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v2/task-group/activity/{task_group_activity_id}/": {"get": {"tags": ["V2 TaskGroup"], "summary": "Get Task Group Activity", "operationId": "get_task_group_activity_api_v2_task_group_activity__task_group_activity_id___get", "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}], "parameters": [{"name": "task_group_activity_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Task Group Activity Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskGroupActivityV2Read"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v2/task-group/": {"get": {"tags": ["V2 TaskGroup"], "summary": "Get Task Group List", "description": "Get all accessible TaskGroups", "operationId": "get_task_group_list_api_v2_task_group__get", "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}], "parameters": [{"name": "only_active", "in": "query", "required": false, "schema": {"type": "boolean", "default": false, "title": "Only Active"}}, {"name": "only_owner", "in": "query", "required": false, "schema": {"type": "boolean", "default": false, "title": "Only Owner"}}, {"name": "args_schema", "in": "query", "required": false, "schema": {"type": "boolean", "default": true, "title": "Args Schema"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"type": "array", "prefixItems": [{"type": "string"}, {"type": "array", "items": {"$ref": "#/components/schemas/TaskGroupReadV2"}}], "minItems": 2, "maxItems": 2}, "title": "Response Get Task Group List Api V2 Task Group  Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v2/task-group/{task_group_id}/": {"get": {"tags": ["V2 TaskGroup"], "summary": "Get Task Group", "description": "Get single TaskGroup", "operationId": "get_task_group_api_v2_task_group__task_group_id___get", "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}], "parameters": [{"name": "task_group_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Task Group Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskGroupReadV2"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "patch": {"tags": ["V2 TaskGroup"], "summary": "Patch Task Group", "description": "Patch single TaskGroup", "operationId": "patch_task_group_api_v2_task_group__task_group_id___patch", "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}], "parameters": [{"name": "task_group_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Task Group Id"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskGroupUpdateV2"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskGroupReadV2"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v2/project/{project_id}/workflow/": {"get": {"tags": ["V2 Workflow"], "summary": "Get Workflow List", "description": "Get workflow list for given project", "operationId": "get_workflow_list_api_v2_project__project_id__workflow__get", "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}], "parameters": [{"name": "project_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Project Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/WorkflowReadV2"}, "title": "Response Get Workflow List Api V2 Project  Project Id  Workflow  Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "post": {"tags": ["V2 Workflow"], "summary": "Create Workflow", "description": "Create a workflow, associate to a project", "operationId": "create_workflow_api_v2_project__project_id__workflow__post", "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}], "parameters": [{"name": "project_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Project Id"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/WorkflowCreateV2"}}}}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/WorkflowReadV2"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v2/project/{project_id}/workflow/{workflow_id}/": {"get": {"tags": ["V2 Workflow"], "summary": "Read Workflow", "description": "Get info on an existing workflow", "operationId": "read_workflow_api_v2_project__project_id__workflow__workflow_id___get", "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}], "parameters": [{"name": "project_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Project Id"}}, {"name": "workflow_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Workflow Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/WorkflowReadV2WithWarnings"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "patch": {"tags": ["V2 Workflow"], "summary": "Update Workflow", "description": "Edit a workflow", "operationId": "update_workflow_api_v2_project__project_id__workflow__workflow_id___patch", "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}], "parameters": [{"name": "project_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Project Id"}}, {"name": "workflow_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Workflow Id"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/WorkflowUpdateV2"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/WorkflowReadV2WithWarnings"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["V2 Workflow"], "summary": "Delete Workflow", "description": "Delete a workflow", "operationId": "delete_workflow_api_v2_project__project_id__workflow__workflow_id___delete", "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}], "parameters": [{"name": "project_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Project Id"}}, {"name": "workflow_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Workflow Id"}}], "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v2/project/{project_id}/workflow/{workflow_id}/export/": {"get": {"tags": ["V2 Workflow"], "summary": "Export Workflow", "description": "Export an existing workflow, after stripping all IDs", "operationId": "export_workflow_api_v2_project__project_id__workflow__workflow_id__export__get", "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}], "parameters": [{"name": "project_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Project Id"}}, {"name": "workflow_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Workflow Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/WorkflowExportV2"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v2/workflow/": {"get": {"tags": ["V2 Workflow"], "summary": "Get User Workflows", "description": "Returns all the workflows of the current user", "operationId": "get_user_workflows_api_v2_workflow__get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/WorkflowReadV2"}, "type": "array", "title": "Response Get User Workflows Api V2 Workflow  Get"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}}, "/api/v2/project/{project_id}/workflow/{workflow_id}/type-filters-flow/": {"get": {"tags": ["V2 Workflow"], "summary": "Get Workflow Type Filters", "description": "Get info on type/type-filters flow for a workflow.", "operationId": "get_workflow_type_filters_api_v2_project__project_id__workflow__workflow_id__type_filters_flow__get", "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}], "parameters": [{"name": "project_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Project Id"}}, {"name": "workflow_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Workflow Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/WorkflowTaskTypeFiltersInfo"}, "title": "Response Get Workflow Type Filters Api V2 Project  Project Id  Workflow  Workflow Id  Type Filters Flow  Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v2/project/{project_id}/workflow/import/": {"post": {"tags": ["V2 Workflow Import"], "summary": "Import Workflow", "description": "Import an existing workflow into a project and create required objects.", "operationId": "import_workflow_api_v2_project__project_id__workflow_import__post", "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}], "parameters": [{"name": "project_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Project Id"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/WorkflowImportV2"}}}}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/WorkflowReadV2WithWarnings"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v2/project/{project_id}/workflow/{workflow_id}/wftask/": {"post": {"tags": ["V2 WorkflowTask"], "summary": "Create Workflowtask", "description": "Add a WorkflowTask to a Workflow", "operationId": "create_workflowtask_api_v2_project__project_id__workflow__workflow_id__wftask__post", "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}], "parameters": [{"name": "project_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Project Id"}}, {"name": "workflow_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Workflow Id"}}, {"name": "task_id", "in": "query", "required": true, "schema": {"type": "integer", "title": "Task Id"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/WorkflowTaskCreateV2"}}}}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/WorkflowTaskReadV2"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v2/project/{project_id}/workflow/{workflow_id}/wftask/{workflow_task_id}/": {"get": {"tags": ["V2 WorkflowTask"], "summary": "Read Workflowtask", "operationId": "read_workflowtask_api_v2_project__project_id__workflow__workflow_id__wftask__workflow_task_id___get", "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}], "parameters": [{"name": "project_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Project Id"}}, {"name": "workflow_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Workflow Id"}}, {"name": "workflow_task_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Workflow Task Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/WorkflowTaskReadV2"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "patch": {"tags": ["V2 WorkflowTask"], "summary": "Update Workflowtask", "description": "Edit a WorkflowTask of a Workflow", "operationId": "update_workflowtask_api_v2_project__project_id__workflow__workflow_id__wftask__workflow_task_id___patch", "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}], "parameters": [{"name": "project_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Project Id"}}, {"name": "workflow_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Workflow Id"}}, {"name": "workflow_task_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Workflow Task Id"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/WorkflowTaskUpdateV2"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/WorkflowTaskReadV2"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["V2 WorkflowTask"], "summary": "Delete Workflowtask", "description": "Delete a WorkflowTask of a Workflow", "operationId": "delete_workflowtask_api_v2_project__project_id__workflow__workflow_id__wftask__workflow_task_id___delete", "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}], "parameters": [{"name": "project_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Project Id"}}, {"name": "workflow_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Workflow Id"}}, {"name": "workflow_task_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Workflow Task Id"}}], "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/admin/v2/accounting/": {"post": {"tags": ["V2 Admin area"], "summary": "Query Accounting", "operationId": "query_accounting_admin_v2_accounting__post", "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}], "parameters": [{"name": "page", "in": "query", "required": false, "schema": {"type": "integer", "default": 1, "title": "Page"}}, {"name": "page_size", "in": "query", "required": false, "schema": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Page Size"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AccountingQuery"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/PaginationResponse_AccountingRecordRead_"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/admin/v2/accounting/slurm/": {"post": {"tags": ["V2 Admin area"], "summary": "Query Accounting Slurm", "operationId": "query_accounting_slurm_admin_v2_accounting_slurm__post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/AccountingQuery"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}}, "/admin/v2/job/": {"get": {"tags": ["V2 Admin area"], "summary": "View Job", "description": "Query `ApplyWorkflow` table.\n\nArgs:\n    id: If not `None`, select a given `applyworkflow.id`.\n    project_id: If not `None`, select a given `applyworkflow.project_id`.\n    dataset_id: If not `None`, select a given\n        `applyworkflow.input_dataset_id`.\n    workflow_id: If not `None`, select a given `applyworkflow.workflow_id`.\n    status: If not `None`, select a given `applyworkflow.status`.\n    start_timestamp_min: If not `None`, select a rows with\n        `start_timestamp` after `start_timestamp_min`.\n    start_timestamp_max: If not `None`, select a rows with\n        `start_timestamp` before `start_timestamp_min`.\n    end_timestamp_min: If not `None`, select a rows with `end_timestamp`\n        after `end_timestamp_min`.\n    end_timestamp_max: If not `None`, select a rows with `end_timestamp`\n        before `end_timestamp_min`.\n    log: If `True`, include `job.log`, if `False`\n        `job.log` is set to `None`.", "operationId": "view_job_admin_v2_job__get", "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}], "parameters": [{"name": "id", "in": "query", "required": false, "schema": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Id"}}, {"name": "user_id", "in": "query", "required": false, "schema": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "User Id"}}, {"name": "project_id", "in": "query", "required": false, "schema": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Project Id"}}, {"name": "dataset_id", "in": "query", "required": false, "schema": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Dataset Id"}}, {"name": "workflow_id", "in": "query", "required": false, "schema": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Workflow Id"}}, {"name": "status", "in": "query", "required": false, "schema": {"anyOf": [{"$ref": "#/components/schemas/JobStatusTypeV2"}, {"type": "null"}], "title": "Status"}}, {"name": "start_timestamp_min", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string", "format": "date-time"}, {"type": "null"}], "title": "Start Timestamp Min"}}, {"name": "start_timestamp_max", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string", "format": "date-time"}, {"type": "null"}], "title": "Start Timestamp Max"}}, {"name": "end_timestamp_min", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string", "format": "date-time"}, {"type": "null"}], "title": "End Timestamp Min"}}, {"name": "end_timestamp_max", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string", "format": "date-time"}, {"type": "null"}], "title": "End Timestamp Max"}}, {"name": "log", "in": "query", "required": false, "schema": {"type": "boolean", "default": true, "title": "Log"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/JobReadV2"}, "title": "Response View Job Admin V2 Job  Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/admin/v2/job/{job_id}/": {"get": {"tags": ["V2 Admin area"], "summary": "View Single Job", "operationId": "view_single_job_admin_v2_job__job_id___get", "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}], "parameters": [{"name": "job_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Job Id"}}, {"name": "show_tmp_logs", "in": "query", "required": false, "schema": {"type": "boolean", "default": false, "title": "Show Tmp Logs"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/JobReadV2"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "patch": {"tags": ["V2 Admin area"], "summary": "Update Job", "description": "Change the status of an existing job.\n\nThis endpoint is only open to superusers, and it does not apply\nproject-based access-control to jobs.", "operationId": "update_job_admin_v2_job__job_id___patch", "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}], "parameters": [{"name": "job_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Job Id"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/JobUpdateV2"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/JobReadV2"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/admin/v2/job/{job_id}/stop/": {"get": {"tags": ["V2 Admin area"], "summary": "Stop Job", "description": "Stop execution of a workflow job.", "operationId": "stop_job_admin_v2_job__job_id__stop__get", "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}], "parameters": [{"name": "job_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Job Id"}}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/admin/v2/job/{job_id}/download/": {"get": {"tags": ["V2 Admin area"], "summary": "Download Job Logs", "description": "Download job folder", "operationId": "download_job_logs_admin_v2_job__job_id__download__get", "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}], "parameters": [{"name": "job_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Job Id"}}], "responses": {"200": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/admin/v2/project/": {"get": {"tags": ["V2 Admin area"], "summary": "View Project", "description": "Query `ProjectV2` table.\n\nArgs:\n    id: If not `None`, select a given `project.id`.\n    user_id: If not `None`, select a given `project.user_id`.", "operationId": "view_project_admin_v2_project__get", "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}], "parameters": [{"name": "id", "in": "query", "required": false, "schema": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Id"}}, {"name": "user_id", "in": "query", "required": false, "schema": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "User Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/ProjectReadV2"}, "title": "Response View Project Admin V2 Project  Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/admin/v2/task/": {"get": {"tags": ["V2 Admin area"], "summary": "Query Tasks", "description": "Query `TaskV2` table and get information about related items\n(WorkflowV2s and ProjectV2s)\n\nArgs:\n    id: If not `None`, query for matching `task.id`.\n    source: If not `None`, query for contained case insensitive\n        `task.source`.\n    version: If not `None`, query for matching `task.version`.\n    name: If not `None`, query for contained case insensitive `task.name`.\n    max_number_of_results: The maximum length of the response.\n    category:\n    modality:\n    author:\n    resource_id:", "operationId": "query_tasks_admin_v2_task__get", "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}], "parameters": [{"name": "id", "in": "query", "required": false, "schema": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Id"}}, {"name": "source", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Source"}}, {"name": "version", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Version"}}, {"name": "name", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Name"}}, {"name": "max_number_of_results", "in": "query", "required": false, "schema": {"type": "integer", "default": 25, "title": "Max Number Of Results"}}, {"name": "category", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Category"}}, {"name": "modality", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Modality"}}, {"name": "author", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Author"}}, {"name": "resource_id", "in": "query", "required": false, "schema": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Resource Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/TaskV2Info-Output"}, "title": "Response Query Tasks Admin V2 Task  Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/admin/v2/task-group/activity/": {"get": {"tags": ["V2 Admin area"], "summary": "Get Task Group Activity List", "operationId": "get_task_group_activity_list_admin_v2_task_group_activity__get", "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}], "parameters": [{"name": "task_group_activity_id", "in": "query", "required": false, "schema": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Task Group Activity Id"}}, {"name": "user_id", "in": "query", "required": false, "schema": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "User Id"}}, {"name": "taskgroupv2_id", "in": "query", "required": false, "schema": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Taskgroupv2 Id"}}, {"name": "pkg_name", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Pkg Name"}}, {"name": "status", "in": "query", "required": false, "schema": {"anyOf": [{"$ref": "#/components/schemas/TaskGroupActivityStatusV2"}, {"type": "null"}], "title": "Status"}}, {"name": "action", "in": "query", "required": false, "schema": {"anyOf": [{"$ref": "#/components/schemas/TaskGroupActivityActionV2"}, {"type": "null"}], "title": "Action"}}, {"name": "timestamp_started_min", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string", "format": "date-time"}, {"type": "null"}], "title": "Timestamp Started Min"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/TaskGroupActivityV2Read"}, "title": "Response Get Task Group Activity List Admin V2 Task Group Activity  Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/admin/v2/task-group/{task_group_id}/": {"get": {"tags": ["V2 Admin area"], "summary": "Query Task Group", "operationId": "query_task_group_admin_v2_task_group__task_group_id___get", "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}], "parameters": [{"name": "task_group_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Task Group Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskGroupReadSuperuser"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "patch": {"tags": ["V2 Admin area"], "summary": "Patch Task Group", "operationId": "patch_task_group_admin_v2_task_group__task_group_id___patch", "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}], "parameters": [{"name": "task_group_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Task Group Id"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskGroupUpdateV2"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskGroupReadSuperuser"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/admin/v2/task-group/": {"get": {"tags": ["V2 Admin area"], "summary": "Query Task Group List", "operationId": "query_task_group_list_admin_v2_task_group__get", "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}], "parameters": [{"name": "user_id", "in": "query", "required": false, "schema": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "User Id"}}, {"name": "user_group_id", "in": "query", "required": false, "schema": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "User Group Id"}}, {"name": "private", "in": "query", "required": false, "schema": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Private"}}, {"name": "active", "in": "query", "required": false, "schema": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Active"}}, {"name": "pkg_name", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Pkg Name"}}, {"name": "origin", "in": "query", "required": false, "schema": {"anyOf": [{"$ref": "#/components/schemas/TaskGroupV2OriginEnum"}, {"type": "null"}], "title": "Origin"}}, {"name": "timestamp_last_used_min", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string", "format": "date-time"}, {"type": "null"}], "title": "Timestamp Last Used Min"}}, {"name": "timestamp_last_used_max", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string", "format": "date-time"}, {"type": "null"}], "title": "Timestamp Last Used Max"}}, {"name": "resource_id", "in": "query", "required": false, "schema": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Resource Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/TaskGroupReadSuperuser"}, "title": "Response Query Task Group List Admin V2 Task Group  Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/admin/v2/task-group/{task_group_id}/deactivate/": {"post": {"tags": ["V2 Admin area"], "summary": "Deactivate Task Group", "description": "Deactivate task-group venv", "operationId": "deactivate_task_group_admin_v2_task_group__task_group_id__deactivate__post", "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}], "parameters": [{"name": "task_group_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Task Group Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskGroupActivityV2Read"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/admin/v2/task-group/{task_group_id}/reactivate/": {"post": {"tags": ["V2 Admin area"], "summary": "Reactivate Task Group", "description": "Deactivate task-group venv", "operationId": "reactivate_task_group_admin_v2_task_group__task_group_id__reactivate__post", "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}], "parameters": [{"name": "task_group_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Task Group Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskGroupActivityV2Read"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/admin/v2/task-group/{task_group_id}/delete/": {"post": {"tags": ["V2 Admin area"], "summary": "Delete Task Group", "operationId": "delete_task_group_admin_v2_task_group__task_group_id__delete__post", "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}], "parameters": [{"name": "task_group_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Task Group Id"}}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/admin/v2/impersonate/{user_id}/": {"get": {"tags": ["V2 Admin area"], "summary": "Impersonate User", "operationId": "impersonate_user_admin_v2_impersonate__user_id___get", "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}], "parameters": [{"name": "user_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "User Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/admin/v2/resource/": {"get": {"tags": ["V2 Admin area"], "summary": "Get Resource List", "description": "Query `Resource` table.", "operationId": "get_resource_list_admin_v2_resource__get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/ResourceRead"}, "type": "array", "title": "Response Get Resource List Admin V2 Resource  Get"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}, "post": {"tags": ["V2 Admin area"], "summary": "Post Resource", "description": "Create new `Resource`.", "operationId": "post_resource_admin_v2_resource__post", "requestBody": {"content": {"application/json": {"schema": {"oneOf": [{"$ref": "#/components/schemas/ValidResourceLocal"}, {"$ref": "#/components/schemas/ValidResourceSlurmSudo"}, {"$ref": "#/components/schemas/ValidResourceSlurmSSH"}], "title": "Resource Create"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ResourceRead"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}}, "/admin/v2/resource/{resource_id}/": {"get": {"tags": ["V2 Admin area"], "summary": "Get Resource", "description": "Query single `Resource`.", "operationId": "get_resource_admin_v2_resource__resource_id___get", "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}], "parameters": [{"name": "resource_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Resource Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ResourceRead"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "put": {"tags": ["V2 Admin area"], "summary": "Put Resource", "description": "Overwrite a single `Resource`.", "operationId": "put_resource_admin_v2_resource__resource_id___put", "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}], "parameters": [{"name": "resource_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Resource Id"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"oneOf": [{"$ref": "#/components/schemas/ValidResourceLocal"}, {"$ref": "#/components/schemas/ValidResourceSlurmSudo"}, {"$ref": "#/components/schemas/ValidResourceSlurmSSH"}], "title": "Resource Update"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ResourceRead"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["V2 Admin area"], "summary": "Delete Resource", "description": "Delete single `Resource`.", "operationId": "delete_resource_admin_v2_resource__resource_id___delete", "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}], "parameters": [{"name": "resource_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Resource Id"}}], "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/admin/v2/resource/{resource_id}/profile/": {"get": {"tags": ["V2 Admin area"], "summary": "Get Resource Profiles", "description": "Query `Profile`s for single `Resource`.", "operationId": "get_resource_profiles_admin_v2_resource__resource_id__profile__get", "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}], "parameters": [{"name": "resource_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Resource Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/ProfileRead"}, "title": "Response Get Resource Profiles Admin V2 Resource  Resource Id  Profile  Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "post": {"tags": ["V2 Admin area"], "summary": "Post Profile", "description": "Create new `Profile`.", "operationId": "post_profile_admin_v2_resource__resource_id__profile__post", "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}], "parameters": [{"name": "resource_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Resource Id"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"oneOf": [{"$ref": "#/components/schemas/ValidProfileLocal"}, {"$ref": "#/components/schemas/ValidProfileSlurmSudo"}, {"$ref": "#/components/schemas/ValidProfileSlurmSSH"}], "title": "Profile Create"}}}}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ProfileRead"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/admin/v2/profile/{profile_id}/": {"get": {"tags": ["V2 Admin area"], "summary": "Get Single Profile", "description": "Query single `Profile`.", "operationId": "get_single_profile_admin_v2_profile__profile_id___get", "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}], "parameters": [{"name": "profile_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Profile Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ProfileRead"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "put": {"tags": ["V2 Admin area"], "summary": "Put Profile", "description": "Override single `Profile`.", "operationId": "put_profile_admin_v2_profile__profile_id___put", "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}], "parameters": [{"name": "profile_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Profile Id"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"oneOf": [{"$ref": "#/components/schemas/ValidProfileLocal"}, {"$ref": "#/components/schemas/ValidProfileSlurmSudo"}, {"$ref": "#/components/schemas/ValidProfileSlurmSSH"}], "title": "Profile Update"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ProfileRead"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["V2 Admin area"], "summary": "Delete Profile", "description": "Delete single `Profile`.", "operationId": "delete_profile_admin_v2_profile__profile_id___delete", "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}], "parameters": [{"name": "profile_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Profile Id"}}], "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/admin/v2/profile/": {"get": {"tags": ["V2 Admin area"], "summary": "Get Profile List", "description": "Query single `Profile`.", "operationId": "get_profile_list_admin_v2_profile__get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/ProfileRead"}, "type": "array", "title": "Response Get Profile List Admin V2 Profile  Get"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}}, "/auth/register/": {"post": {"tags": ["Authentication"], "summary": "Register:Register", "operationId": "register_register_auth_register__post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserCreate"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserRead"}}}}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorModel"}, "examples": {"REGISTER_USER_ALREADY_EXISTS": {"summary": "A user with this email already exists.", "value": {"detail": "REGISTER_USER_ALREADY_EXISTS"}}, "REGISTER_INVALID_PASSWORD": {"summary": "Password validation failed.", "value": {"detail": {"code": "REGISTER_INVALID_PASSWORD", "reason": "Password should beat least 3 characters"}}}}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}}, "/auth/current-user/": {"get": {"tags": ["Authentication"], "summary": "Get Current User", "description": "Return current user", "operationId": "get_current_user_auth_current_user__get", "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}], "parameters": [{"name": "group_ids_names", "in": "query", "required": false, "schema": {"type": "boolean", "default": false, "title": "Group Ids Names"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserRead"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "patch": {"tags": ["Authentication"], "summary": "Patch Current User", "description": "Note: a user cannot patch their own password (as enforced within the\n`UserUpdateStrict` schema).", "operationId": "patch_current_user_auth_current_user__patch", "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserUpdateStrict"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserRead"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/auth/current-user/profile-info/": {"get": {"tags": ["Authentication"], "summary": "Get Current User Profile Info", "operationId": "get_current_user_profile_info_auth_current_user_profile_info__get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserProfileInfo"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}}, "/auth/current-user/allowed-viewer-paths/": {"get": {"tags": ["Authentication"], "summary": "Get Current User Allowed Viewer Paths", "description": "Returns the allowed viewer paths for current user, according to the\nselected FRACTAL_DATA_AUTH_SCHEME", "operationId": "get_current_user_allowed_viewer_paths_auth_current_user_allowed_viewer_paths__get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"items": {"type": "string"}, "type": "array", "title": "Response Get Current User Allowed Viewer Paths Auth Current User Allowed Viewer Paths  Get"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}}, "/auth/token/login/": {"post": {"tags": ["Authentication"], "summary": "Auth:Bearer-Jwt.Login", "operationId": "auth_bearer_jwt_login_auth_token_login__post", "requestBody": {"content": {"application/x-www-form-urlencoded": {"schema": {"$ref": "#/components/schemas/Body_auth_bearer_jwt_login_auth_token_login__post"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/BearerResponse"}, "example": {"access_token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoiOTIyMWZmYzktNjQwZi00MzcyLTg2ZDMtY2U2NDJjYmE1NjAzIiwiYXVkIjoiZmFzdGFwaS11c2VyczphdXRoIiwiZXhwIjoxNTcxNTA0MTkzfQ.M10bjOe45I5Ncu_uXvOmVV8QxnL-nZfcH96U90JaocI", "token_type": "bearer"}}}}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorModel"}, "examples": {"LOGIN_BAD_CREDENTIALS": {"summary": "Bad credentials or the user is inactive.", "value": {"detail": "LOGIN_BAD_CREDENTIALS"}}, "LOGIN_USER_NOT_VERIFIED": {"summary": "The user is not verified.", "value": {"detail": "LOGIN_USER_NOT_VERIFIED"}}}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/auth/token/logout/": {"post": {"tags": ["Authentication"], "summary": "Auth:Bearer-Jwt.Logout", "operationId": "auth_bearer_jwt_logout_auth_token_logout__post", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "401": {"description": "Missing token or inactive user."}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}}, "/auth/login/": {"post": {"tags": ["Authentication"], "summary": "Auth:Cookie-Jwt.Login", "operationId": "auth_cookie_jwt_login_auth_login__post", "requestBody": {"content": {"application/x-www-form-urlencoded": {"schema": {"$ref": "#/components/schemas/Body_auth_cookie_jwt_login_auth_login__post"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorModel"}, "examples": {"LOGIN_BAD_CREDENTIALS": {"summary": "Bad credentials or the user is inactive.", "value": {"detail": "LOGIN_BAD_CREDENTIALS"}}, "LOGIN_USER_NOT_VERIFIED": {"summary": "The user is not verified.", "value": {"detail": "LOGIN_USER_NOT_VERIFIED"}}}}}}, "204": {"description": "No Content"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/auth/logout/": {"post": {"tags": ["Authentication"], "summary": "Auth:Cookie-Jwt.Logout", "operationId": "auth_cookie_jwt_logout_auth_logout__post", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "401": {"description": "Missing token or inactive user."}, "204": {"description": "No Content"}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}}, "/auth/users/{user_id}/": {"get": {"tags": ["Authentication"], "summary": "Get User", "operationId": "get_user_auth_users__user_id___get", "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}], "parameters": [{"name": "user_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "User Id"}}, {"name": "group_ids_names", "in": "query", "required": false, "schema": {"type": "boolean", "default": true, "title": "Group Ids Names"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserRead"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "patch": {"tags": ["Authentication"], "summary": "Patch User", "description": "Custom version of the PATCH-user route from `fastapi-users`.", "operationId": "patch_user_auth_users__user_id___patch", "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}], "parameters": [{"name": "user_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "User Id"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserUpdate"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserRead"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/auth/users/": {"get": {"tags": ["Authentication"], "summary": "List Users", "description": "Return list of all users", "operationId": "list_users_auth_users__get", "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}], "parameters": [{"name": "profile_id", "in": "query", "required": false, "schema": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Profile Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/UserRead"}, "title": "Response List Users Auth Users  Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/auth/users/{user_id}/set-groups/": {"post": {"tags": ["Authentication"], "summary": "Set User Groups", "operationId": "set_user_groups_auth_users__user_id__set_groups__post", "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}], "parameters": [{"name": "user_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "User Id"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserUpdateGroups"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserRead"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/auth/group/": {"get": {"tags": ["Authentication"], "summary": "Get List User Groups", "operationId": "get_list_user_groups_auth_group__get", "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}], "parameters": [{"name": "user_ids", "in": "query", "required": false, "schema": {"type": "boolean", "default": false, "title": "User Ids"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/UserGroupRead"}, "title": "Response Get List User Groups Auth Group  Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "post": {"tags": ["Authentication"], "summary": "Create Single Group", "operationId": "create_single_group_auth_group__post", "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserGroupCreate"}}}}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserGroupRead"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/auth/group/{group_id}/": {"get": {"tags": ["Authentication"], "summary": "Get Single User Group", "operationId": "get_single_user_group_auth_group__group_id___get", "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}], "parameters": [{"name": "group_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Group Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserGroupRead"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "patch": {"tags": ["Authentication"], "summary": "Update Single Group", "operationId": "update_single_group_auth_group__group_id___patch", "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}], "parameters": [{"name": "group_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Group Id"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserGroupUpdate"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserGroupRead"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["Authentication"], "summary": "Delete Single Group", "description": "Delete a user group.\n\nIf `FRACTAL_DEFAULT_GROUP_NAME=\"All\"`, a group named `\"All\"` cannot be\ndeleted. If `FRACTAL_DEFAULT_GROUP_NAME=None`, any group can be deleted.", "operationId": "delete_single_group_auth_group__group_id___delete", "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}], "parameters": [{"name": "group_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Group Id"}}], "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/auth/group/{group_id}/add-user/{user_id}/": {"post": {"tags": ["Authentication"], "summary": "Add User To Group", "operationId": "add_user_to_group_auth_group__group_id__add_user__user_id___post", "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}], "parameters": [{"name": "group_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Group Id"}}, {"name": "user_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "User Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserGroupRead"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/auth/group/{group_id}/remove-user/{user_id}/": {"post": {"tags": ["Authentication"], "summary": "Remove User From Group", "operationId": "remove_user_from_group_auth_group__group_id__remove_user__user_id___post", "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}], "parameters": [{"name": "group_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Group Id"}}, {"name": "user_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "User Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserGroupRead"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}}, "components": {"schemas": {"AccountingQuery": {"properties": {"user_id": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "User Id"}, "timestamp_min": {"anyOf": [{"type": "string", "format": "date-time"}, {"type": "null"}], "title": "Timestamp Min"}, "timestamp_max": {"anyOf": [{"type": "string", "format": "date-time"}, {"type": "null"}], "title": "Timestamp Max"}}, "type": "object", "title": "AccountingQuery"}, "AccountingRecordRead-Input": {"properties": {"id": {"type": "integer", "title": "Id"}, "user_id": {"type": "integer", "title": "User Id"}, "timestamp": {"type": "string", "format": "date-time", "title": "Timestamp"}, "num_tasks": {"type": "integer", "title": "Num Tasks"}, "num_new_images": {"type": "integer", "title": "Num New Images"}}, "type": "object", "required": ["id", "user_id", "timestamp", "num_tasks", "num_new_images"], "title": "AccountingRecordRead"}, "AccountingRecordRead-Output": {"properties": {"id": {"type": "integer", "title": "Id"}, "user_id": {"type": "integer", "title": "User Id"}, "timestamp": {"type": "string", "title": "Timestamp"}, "num_tasks": {"type": "integer", "title": "Num Tasks"}, "num_new_images": {"type": "integer", "title": "Num New Images"}}, "type": "object", "required": ["id", "user_id", "timestamp", "num_tasks", "num_new_images"], "title": "AccountingRecordRead"}, "BearerResponse": {"properties": {"access_token": {"type": "string", "title": "Access Token"}, "token_type": {"type": "string", "title": "Token Type"}}, "type": "object", "required": ["access_token", "token_type"], "title": "BearerResponse"}, "Body_auth_bearer_jwt_login_auth_token_login__post": {"properties": {"grant_type": {"anyOf": [{"type": "string", "pattern": "^password$"}, {"type": "null"}], "title": "Grant Type"}, "username": {"type": "string", "title": "Username"}, "password": {"type": "string", "format": "password", "title": "Password"}, "scope": {"type": "string", "title": "Scope", "default": ""}, "client_id": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Client Id"}, "client_secret": {"anyOf": [{"type": "string"}, {"type": "null"}], "format": "password", "title": "Client Secret"}}, "type": "object", "required": ["username", "password"], "title": "Body_auth_bearer_jwt_login_auth_token_login__post"}, "Body_auth_cookie_jwt_login_auth_login__post": {"properties": {"grant_type": {"anyOf": [{"type": "string", "pattern": "^password$"}, {"type": "null"}], "title": "Grant Type"}, "username": {"type": "string", "title": "Username"}, "password": {"type": "string", "format": "password", "title": "Password"}, "scope": {"type": "string", "title": "Scope", "default": ""}, "client_id": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Client Id"}, "client_secret": {"anyOf": [{"type": "string"}, {"type": "null"}], "format": "password", "title": "Client Secret"}}, "type": "object", "required": ["username", "password"], "title": "Body_auth_cookie_jwt_login_auth_login__post"}, "Body_collect_task_pixi_api_v2_task_collect_pixi__post": {"properties": {"file": {"type": "string", "format": "binary", "title": "File"}, "pixi_version": {"anyOf": [{"type": "string", "minLength": 1}, {"type": "null"}], "title": "Pixi Version"}}, "type": "object", "required": ["file"], "title": "Body_collect_task_pixi_api_v2_task_collect_pixi__post"}, "Body_collect_tasks_pip_api_v2_task_collect_pip__post": {"properties": {"package": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Package"}, "package_version": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Package Version"}, "package_extras": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Package Extras"}, "python_version": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Python Version"}, "pinned_package_versions_pre": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Pinned Package Versions Pre"}, "pinned_package_versions_post": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Pinned Package Versions Post"}, "file": {"anyOf": [{"type": "string", "format": "binary"}, {"type": "null"}], "title": "File"}}, "type": "object", "title": "Body_collect_tasks_pip_api_v2_task_collect_pip__post"}, "DatasetCreateV2": {"properties": {"name": {"type": "string", "minLength": 1, "title": "Name"}, "zarr_dir": {"anyOf": [{"type": "string", "minLength": 1}, {"type": "null"}], "title": "Zarr Dir"}, "attribute_filters": {"additionalProperties": {"items": {"anyOf": [{"type": "integer"}, {"type": "number"}, {"type": "string"}, {"type": "boolean"}]}, "type": "array"}, "type": "object", "title": "Attribute Filters"}}, "additionalProperties": false, "type": "object", "required": ["name"], "title": "DatasetCreateV2"}, "DatasetDumpV2": {"properties": {"id": {"type": "integer", "title": "Id"}, "name": {"type": "string", "title": "Name"}, "project_id": {"type": "integer", "title": "Project Id"}, "timestamp_created": {"type": "string", "title": "Timestamp Created"}, "zarr_dir": {"type": "string", "title": "Zarr Dir"}}, "type": "object", "required": ["id", "name", "project_id", "timestamp_created", "zarr_dir"], "title": "DatasetDumpV2", "description": "We do not include 'model_config = ConfigDict(extra=\"forbid\")' because\nlegacy data may include 'type_filters' or 'attribute_filters' and we\nwant to avoid response-validation errors."}, "DatasetExportV2": {"properties": {"name": {"type": "string", "title": "Name"}, "zarr_dir": {"type": "string", "title": "Zarr Dir"}, "images": {"items": {"$ref": "#/components/schemas/SingleImage"}, "type": "array", "title": "Images"}}, "type": "object", "required": ["name", "zarr_dir", "images"], "title": "DatasetExportV2", "description": "Class for `Dataset` export.\n\nAttributes:\n    name:\n    zarr_dir:\n    images:"}, "DatasetImportV2": {"properties": {"name": {"type": "string", "title": "Name"}, "zarr_dir": {"type": "string", "minLength": 1, "title": "Zarr Dir"}, "images": {"items": {"$ref": "#/components/schemas/SingleImage"}, "type": "array", "title": "Images"}}, "type": "object", "required": ["name", "zarr_dir"], "title": "DatasetImportV2", "description": "Class for `Dataset` import.\n\nWe are dropping `model_config = ConfigDict(extra=\"forbid\")` so that any\nkind of legacy filters can be included in the payload, and ignored in the\nAPI.\n\nAttributes:\n    name:\n    zarr_dir:\n    images:"}, "DatasetReadV2": {"properties": {"id": {"type": "integer", "title": "Id"}, "name": {"type": "string", "title": "Name"}, "project_id": {"type": "integer", "title": "Project Id"}, "project": {"$ref": "#/components/schemas/ProjectReadV2"}, "timestamp_created": {"type": "string", "title": "Timestamp Created"}, "zarr_dir": {"type": "string", "title": "Zarr Dir"}}, "type": "object", "required": ["id", "name", "project_id", "project", "timestamp_created", "zarr_dir"], "title": "DatasetReadV2"}, "DatasetUpdateV2": {"properties": {"name": {"type": "string", "minLength": 1, "title": "Name"}, "zarr_dir": {"anyOf": [{"type": "string", "minLength": 1}, {"type": "null"}], "title": "Zarr Dir"}}, "additionalProperties": false, "type": "object", "title": "DatasetUpdateV2"}, "ErrorModel": {"properties": {"detail": {"anyOf": [{"type": "string"}, {"additionalProperties": {"type": "string"}, "type": "object"}], "title": "Detail"}}, "type": "object", "required": ["detail"], "title": "ErrorModel"}, "HTTPValidationError": {"properties": {"detail": {"items": {"$ref": "#/components/schemas/ValidationError"}, "type": "array", "title": "Detail"}}, "type": "object", "title": "HTTPValidationError"}, "HistoryRunRead-Input": {"properties": {"id": {"type": "integer", "title": "Id"}, "dataset_id": {"type": "integer", "title": "Dataset Id"}, "workflowtask_id": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Workflowtask Id"}, "job_id": {"type": "integer", "title": "Job Id"}, "workflowtask_dump": {"additionalProperties": true, "type": "object", "title": "Workflowtask Dump"}, "task_group_dump": {"additionalProperties": true, "type": "object", "title": "Task Group Dump"}, "timestamp_started": {"type": "string", "format": "date-time", "title": "Timestamp Started"}, "status": {"$ref": "#/components/schemas/HistoryUnitStatus"}, "num_available_images": {"type": "integer", "title": "Num Available Images"}}, "type": "object", "required": ["id", "dataset_id", "job_id", "workflowtask_dump", "task_group_dump", "timestamp_started", "status", "num_available_images"], "title": "HistoryRunRead"}, "HistoryRunRead-Output": {"properties": {"id": {"type": "integer", "title": "Id"}, "dataset_id": {"type": "integer", "title": "Dataset Id"}, "workflowtask_id": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Workflowtask Id"}, "job_id": {"type": "integer", "title": "Job Id"}, "workflowtask_dump": {"additionalProperties": true, "type": "object", "title": "Workflowtask Dump"}, "task_group_dump": {"additionalProperties": true, "type": "object", "title": "Task Group Dump"}, "timestamp_started": {"type": "string", "title": "Timestamp Started"}, "status": {"$ref": "#/components/schemas/HistoryUnitStatus"}, "num_available_images": {"type": "integer", "title": "Num Available Images"}}, "type": "object", "required": ["id", "dataset_id", "job_id", "workflowtask_dump", "task_group_dump", "timestamp_started", "status", "num_available_images"], "title": "HistoryRunRead"}, "HistoryRunReadAggregated-Input": {"properties": {"id": {"type": "integer", "title": "Id"}, "timestamp_started": {"type": "string", "format": "date-time", "title": "Timestamp Started"}, "workflowtask_dump": {"additionalProperties": true, "type": "object", "title": "Workflowtask Dump"}, "num_submitted_units": {"type": "integer", "title": "Num Submitted Units"}, "num_done_units": {"type": "integer", "title": "Num Done Units"}, "num_failed_units": {"type": "integer", "title": "Num Failed Units"}, "args_schema_parallel": {"anyOf": [{"additionalProperties": true, "type": "object"}, {"type": "null"}], "title": "Args Schema Parallel"}, "args_schema_non_parallel": {"anyOf": [{"additionalProperties": true, "type": "object"}, {"type": "null"}], "title": "Args Schema Non Parallel"}, "version": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Version"}}, "type": "object", "required": ["id", "timestamp_started", "workflowtask_dump", "num_submitted_units", "num_done_units", "num_failed_units"], "title": "HistoryRunReadAggregated"}, "HistoryRunReadAggregated-Output": {"properties": {"id": {"type": "integer", "title": "Id"}, "timestamp_started": {"type": "string", "title": "Timestamp Started"}, "workflowtask_dump": {"additionalProperties": true, "type": "object", "title": "Workflowtask Dump"}, "num_submitted_units": {"type": "integer", "title": "Num Submitted Units"}, "num_done_units": {"type": "integer", "title": "Num Done Units"}, "num_failed_units": {"type": "integer", "title": "Num Failed Units"}, "args_schema_parallel": {"anyOf": [{"additionalProperties": true, "type": "object"}, {"type": "null"}], "title": "Args Schema Parallel"}, "args_schema_non_parallel": {"anyOf": [{"additionalProperties": true, "type": "object"}, {"type": "null"}], "title": "Args Schema Non Parallel"}, "version": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Version"}}, "type": "object", "required": ["id", "timestamp_started", "workflowtask_dump", "num_submitted_units", "num_done_units", "num_failed_units"], "title": "HistoryRunReadAggregated"}, "HistoryUnitRead": {"properties": {"id": {"type": "integer", "title": "Id"}, "logfile": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Logfile"}, "status": {"$ref": "#/components/schemas/HistoryUnitStatus"}, "zarr_urls": {"items": {"type": "string"}, "type": "array", "title": "Zarr Urls"}}, "type": "object", "required": ["id", "status", "zarr_urls"], "title": "HistoryUnitRead"}, "HistoryUnitStatus": {"type": "string", "enum": ["submitted", "done", "failed"], "title": "HistoryUnitStatus", "description": "Available status for images\n\nAttributes:\n    SUBMITTED:\n    DONE:\n    FAILED:"}, "ImageLogsRequest": {"properties": {"workflowtask_id": {"type": "integer", "title": "Workflowtask Id"}, "dataset_id": {"type": "integer", "title": "Dataset Id"}, "zarr_url": {"type": "string", "title": "Zarr Url"}}, "type": "object", "required": ["workflowtask_id", "dataset_id", "zarr_url"], "title": "ImageLogsRequest"}, "ImagePage": {"properties": {"current_page": {"type": "integer", "minimum": 1.0, "title": "Current Page"}, "page_size": {"type": "integer", "minimum": 0.0, "title": "Page Size"}, "total_count": {"type": "integer", "minimum": 0.0, "title": "Total Count"}, "items": {"items": {"$ref": "#/components/schemas/SingleImage"}, "type": "array", "title": "Items"}, "attributes": {"additionalProperties": {"items": {"anyOf": [{"type": "integer"}, {"type": "number"}, {"type": "string"}, {"type": "boolean"}]}, "type": "array"}, "type": "object", "title": "Attributes"}, "types": {"items": {"type": "string"}, "type": "array", "title": "Types"}}, "type": "object", "required": ["current_page", "page_size", "total_count", "items", "attributes", "types"], "title": "ImagePage"}, "ImageQuery": {"properties": {"type_filters": {"additionalProperties": {"type": "boolean"}, "type": "object", "title": "Type Filters"}, "attribute_filters": {"additionalProperties": {"items": {"anyOf": [{"type": "integer"}, {"type": "number"}, {"type": "string"}, {"type": "boolean"}]}, "type": "array"}, "type": "object", "title": "Attribute Filters"}}, "type": "object", "title": "ImageQuery", "description": "Query for a list of images.\n\nAttributes:\n    type_filters:\n    attribute_filters:"}, "ImageQueryWithZarrUrl": {"properties": {"type_filters": {"additionalProperties": {"type": "boolean"}, "type": "object", "title": "Type Filters"}, "attribute_filters": {"additionalProperties": {"items": {"anyOf": [{"type": "integer"}, {"type": "number"}, {"type": "string"}, {"type": "boolean"}]}, "type": "array"}, "type": "object", "title": "Attribute Filters"}, "zarr_url": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Zarr Url"}}, "type": "object", "title": "ImageQueryWithZarrUrl"}, "JobCreateV2": {"properties": {"first_task_index": {"anyOf": [{"type": "integer", "minimum": 0.0}, {"type": "null"}], "title": "First Task Index"}, "last_task_index": {"anyOf": [{"type": "integer", "minimum": 0.0}, {"type": "null"}], "title": "Last Task Index"}, "slurm_account": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Slurm Account"}, "worker_init": {"type": "string", "minLength": 1, "title": "Worker Init"}, "attribute_filters": {"additionalProperties": {"items": {"anyOf": [{"type": "integer"}, {"type": "number"}, {"type": "string"}, {"type": "boolean"}]}, "type": "array"}, "type": "object", "title": "Attribute Filters"}, "type_filters": {"additionalProperties": {"type": "boolean"}, "type": "object", "title": "Type Filters"}}, "additionalProperties": false, "type": "object", "title": "JobCreateV2"}, "JobReadV2": {"properties": {"id": {"type": "integer", "title": "Id"}, "project_id": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Project Id"}, "project_dump": {"$ref": "#/components/schemas/ProjectDumpV2"}, "user_email": {"type": "string", "title": "User Email"}, "slurm_account": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Slurm Account"}, "workflow_id": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Workflow Id"}, "workflow_dump": {"$ref": "#/components/schemas/WorkflowDumpV2"}, "dataset_id": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Dataset Id"}, "dataset_dump": {"$ref": "#/components/schemas/DatasetDumpV2"}, "start_timestamp": {"type": "string", "title": "Start Timestamp"}, "end_timestamp": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "End Timestamp"}, "status": {"type": "string", "title": "Status"}, "log": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Log"}, "executor_error_log": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Executor Error Log"}, "working_dir": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Working Dir"}, "working_dir_user": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Working Dir User"}, "first_task_index": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "First Task Index"}, "last_task_index": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Last Task Index"}, "worker_init": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Worker Init"}, "attribute_filters": {"additionalProperties": {"items": {"anyOf": [{"type": "integer"}, {"type": "number"}, {"type": "string"}, {"type": "boolean"}]}, "type": "array"}, "type": "object", "title": "Attribute Filters"}, "type_filters": {"additionalProperties": {"type": "boolean"}, "type": "object", "title": "Type Filters"}}, "type": "object", "required": ["id", "project_dump", "user_email", "workflow_dump", "dataset_dump", "start_timestamp", "status", "attribute_filters", "type_filters"], "title": "JobReadV2"}, "JobRunnerConfigLocal": {"properties": {"parallel_tasks_per_job": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Parallel Tasks Per Job"}}, "additionalProperties": false, "type": "object", "title": "JobRunnerConfigLocal", "description": "Specifications of the local-backend configuration\n\nAttributes:\n    parallel_tasks_per_job:\n        Maximum number of tasks to be run in parallel as part of a call to\n        `FractalThreadPoolExecutor.map`; if `None`, then all tasks will\n        start at the same time."}, "JobRunnerConfigSLURM": {"properties": {"default_slurm_config": {"$ref": "#/components/schemas/_SlurmConfigSet"}, "gpu_slurm_config": {"anyOf": [{"$ref": "#/components/schemas/_SlurmConfigSet"}, {"type": "null"}]}, "batching_config": {"$ref": "#/components/schemas/_BatchingConfigSet"}, "user_local_exports": {"additionalProperties": {"type": "string", "minLength": 1}, "type": "object", "title": "User Local Exports"}}, "additionalProperties": false, "type": "object", "required": ["default_slurm_config", "batching_config"], "title": "JobRunnerConfigSLURM", "description": "Common SLURM configuration.\n\nNote: this is a common and abstract class, which gets transformed into\nmore specific configuration objects during job execution.\n\nValid JSON example\n```JSON\n{\n  \"default_slurm_config\": {\n      \"partition\": \"main\",\n      \"cpus_per_task\": 1\n  },\n  \"gpu_slurm_config\": {\n      \"partition\": \"gpu\",\n      \"extra_lines\": [\"#SBATCH --gres=gpu:v100:1\"]\n  },\n  \"batching_config\": {\n      \"target_cpus_per_job\": 1,\n      \"max_cpus_per_job\": 1,\n      \"target_mem_per_job\": 200,\n      \"max_mem_per_job\": 500,\n      \"target_num_jobs\": 2,\n      \"max_num_jobs\": 4\n  },\n  \"user_local_exports\": {\n      \"CELLPOSE_LOCAL_MODELS_PATH\": \"CELLPOSE_LOCAL_MODELS_PATH\",\n      \"NAPARI_CONFIG\": \"napari_config.json\"\n  }\n}\n```\n\nAttributes:\n    default_slurm_config:\n        Common default options for all tasks.\n    gpu_slurm_config:\n        Default configuration for all GPU tasks.\n    batching_config:\n        Configuration of the batching strategy.\n    user_local_exports:\n        Key-value pairs to be included as `export`-ed variables in SLURM\n        submission script, after prepending values with the user's cache\n        directory."}, "JobStatusTypeV2": {"type": "string", "enum": ["submitted", "done", "failed"], "title": "JobStatusTypeV2", "description": "Define the available job statuses\n\nAttributes:\n    SUBMITTED:\n        The job was created. This does not guarantee that it was also\n        submitted to an executor (e.g. other errors could have prevented\n        this), nor that it is actually running (e.g. SLURM jobs could be\n        still in the queue).\n    DONE:\n        The job successfully reached its end.\n    FAILED:\n        The workflow terminated with an error."}, "JobUpdateV2": {"properties": {"status": {"$ref": "#/components/schemas/JobStatusTypeV2"}}, "additionalProperties": false, "type": "object", "required": ["status"], "title": "JobUpdateV2"}, "LegacyStatusReadV2": {"properties": {"status": {"additionalProperties": {"$ref": "#/components/schemas/WorkflowTaskStatusTypeV2"}, "type": "object", "title": "Status"}}, "type": "object", "title": "LegacyStatusReadV2", "description": "Response type for the\n`/project/{project_id}/status/` endpoint"}, "ManifestV2": {"properties": {"manifest_version": {"type": "string", "const": "2", "title": "Manifest Version"}, "task_list": {"items": {"$ref": "#/components/schemas/TaskManifestV2"}, "type": "array", "title": "Task List"}, "has_args_schemas": {"type": "boolean", "title": "Has Args Schemas", "default": false}, "args_schema_version": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Args Schema Version"}, "authors": {"anyOf": [{"type": "string", "minLength": 1}, {"type": "null"}], "title": "Authors"}}, "type": "object", "required": ["manifest_version", "task_list"], "title": "ManifestV2", "description": "Packages containing tasks are required to include a special file\n`__FRACTAL_MANIFEST__.json` in order to be discovered and used by Fractal.\n\nThis model class and the model classes it depends on provide the base\nschema to read, write and validate manifests.\n\nAttributes:\n    manifest_version:\n        A version string that provides indication for compatibility between\n        manifests as the schema evolves. This is for instance used by\n        Fractal to determine which subclass of the present base class needs\n        be used to read and validate the input.\n    task_list : list[TaskManifestType]\n        The list of tasks, represented as specified by subclasses of the\n        _TaskManifestBase (a.k.a. TaskManifestType)\n    has_args_schemas:\n        `True` if the manifest includes JSON Schemas for the arguments of\n        each task.\n    args_schema_version:\n        Label of how `args_schema`s were generated (e.g. `pydantic_v1`)."}, "NonProcessedImagesPayload": {"properties": {"attribute_filters": {"additionalProperties": {"items": {"anyOf": [{"type": "integer"}, {"type": "number"}, {"type": "string"}, {"type": "boolean"}]}, "type": "array"}, "type": "object", "title": "Attribute Filters"}, "type_filters": {"additionalProperties": {"type": "boolean"}, "type": "object", "title": "Type Filters"}}, "type": "object", "title": "NonProcessedImagesPayload"}, "OAuthAccountRead": {"properties": {"id": {"type": "integer", "title": "Id"}, "account_email": {"type": "string", "title": "Account Email"}, "oauth_name": {"type": "string", "title": "Oauth Name"}}, "type": "object", "required": ["id", "account_email", "oauth_name"], "title": "OAuthAccountRead", "description": "Schema for storing essential `OAuthAccount` information within\n`UserRead.oauth_accounts`.\n\nAttributes:\n    id: ID of the row in fractal-owned `oauthaccount` table.\n    account_email: Email associated to OAuth account\n    oauth_name: Name of the OAuth provider (e.g. `github`)"}, "PaginationResponse_AccountingRecordRead_": {"properties": {"current_page": {"type": "integer", "minimum": 1.0, "title": "Current Page"}, "page_size": {"type": "integer", "minimum": 0.0, "title": "Page Size"}, "total_count": {"type": "integer", "minimum": 0.0, "title": "Total Count"}, "items": {"items": {"$ref": "#/components/schemas/AccountingRecordRead-Output"}, "type": "array", "title": "Items"}}, "type": "object", "required": ["current_page", "page_size", "total_count", "items"], "title": "PaginationResponse[AccountingRecordRead]"}, "PaginationResponse_HistoryUnitRead_": {"properties": {"current_page": {"type": "integer", "minimum": 1.0, "title": "Current Page"}, "page_size": {"type": "integer", "minimum": 0.0, "title": "Page Size"}, "total_count": {"type": "integer", "minimum": 0.0, "title": "Total Count"}, "items": {"items": {"$ref": "#/components/schemas/HistoryUnitRead"}, "type": "array", "title": "Items"}}, "type": "object", "required": ["current_page", "page_size", "total_count", "items"], "title": "PaginationResponse[HistoryUnitRead]"}, "ProfileRead": {"properties": {"id": {"type": "integer", "title": "Id"}, "name": {"type": "string", "title": "Name"}, "resource_id": {"type": "integer", "title": "Resource Id"}, "resource_type": {"type": "string", "title": "Resource Type"}, "username": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Username"}, "ssh_key_path": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Ssh Key Path"}, "jobs_remote_dir": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Jobs Remote Dir"}, "tasks_remote_dir": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Tasks Remote Dir"}}, "type": "object", "required": ["id", "name", "resource_id", "resource_type"], "title": "ProfileRead"}, "ProjectCreateV2": {"properties": {"name": {"type": "string", "minLength": 1, "title": "Name"}}, "additionalProperties": false, "type": "object", "required": ["name"], "title": "ProjectCreateV2"}, "ProjectDumpV2": {"properties": {"id": {"type": "integer", "title": "Id"}, "name": {"type": "string", "title": "Name"}, "timestamp_created": {"type": "string", "title": "Timestamp Created"}}, "additionalProperties": false, "type": "object", "required": ["id", "name", "timestamp_created"], "title": "ProjectDumpV2"}, "ProjectReadV2": {"properties": {"id": {"type": "integer", "title": "Id"}, "name": {"type": "string", "title": "Name"}, "timestamp_created": {"type": "string", "title": "Timestamp Created"}}, "type": "object", "required": ["id", "name", "timestamp_created"], "title": "ProjectReadV2"}, "ProjectUpdateV2": {"properties": {"name": {"type": "string", "minLength": 1, "title": "Name"}}, "additionalProperties": false, "type": "object", "title": "ProjectUpdateV2"}, "ProjectUser": {"properties": {"id": {"type": "integer", "title": "Id"}, "email": {"type": "string", "format": "email", "title": "Email"}}, "type": "object", "required": ["id", "email"], "title": "ProjectUser"}, "ResourceRead": {"properties": {"id": {"type": "integer", "title": "Id"}, "type": {"type": "string", "title": "Type"}, "name": {"type": "string", "title": "Name"}, "timestamp_created": {"type": "string", "format": "date-time", "title": "Timestamp Created"}, "host": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Host"}, "jobs_local_dir": {"type": "string", "title": "Jobs Local Dir"}, "jobs_runner_config": {"additionalProperties": true, "type": "object", "title": "Jobs Runner Config"}, "jobs_slurm_python_worker": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Jobs Slurm Python Worker"}, "jobs_poll_interval": {"type": "integer", "title": "Jobs Poll Interval"}, "tasks_local_dir": {"type": "string", "title": "Tasks Local Dir"}, "tasks_python_config": {"additionalProperties": true, "type": "object", "title": "Tasks Python Config"}, "tasks_pixi_config": {"additionalProperties": true, "type": "object", "title": "Tasks Pixi Config"}}, "type": "object", "required": ["id", "type", "name", "timestamp_created", "host", "jobs_local_dir", "jobs_runner_config", "jobs_slurm_python_worker", "jobs_poll_interval", "tasks_local_dir", "tasks_python_config", "tasks_pixi_config"], "title": "ResourceRead"}, "ResourceType": {"type": "string", "enum": ["slurm_sudo", "slurm_ssh", "local"], "title": "ResourceType"}, "SingleImage": {"properties": {"zarr_url": {"type": "string", "minLength": 1, "title": "Zarr Url"}, "origin": {"anyOf": [{"type": "string", "minLength": 1}, {"type": "null"}], "title": "Origin"}, "attributes": {"additionalProperties": {"anyOf": [{"type": "integer"}, {"type": "number"}, {"type": "string"}, {"type": "boolean"}]}, "type": "object", "title": "Attributes"}, "types": {"additionalProperties": {"type": "boolean"}, "type": "object", "title": "Types"}}, "type": "object", "required": ["zarr_url"], "title": "SingleImage", "description": "`SingleImageBase`, with scalar `attributes` values (`None` excluded)."}, "SingleImageUpdate": {"properties": {"zarr_url": {"type": "string", "minLength": 1, "title": "Zarr Url"}, "attributes": {"additionalProperties": {"anyOf": [{"type": "integer"}, {"type": "number"}, {"type": "string"}, {"type": "boolean"}]}, "type": "object", "title": "Attributes"}, "types": {"anyOf": [{"additionalProperties": {"type": "boolean"}, "type": "object"}, {"type": "null"}], "title": "Types"}}, "type": "object", "required": ["zarr_url"], "title": "SingleImageUpdate"}, "TaskCollectCustomV2": {"properties": {"manifest": {"$ref": "#/components/schemas/ManifestV2"}, "python_interpreter": {"type": "string", "minLength": 1, "title": "Python Interpreter"}, "label": {"type": "string", "minLength": 1, "title": "Label"}, "package_root": {"anyOf": [{"type": "string", "minLength": 1}, {"type": "null"}], "title": "Package Root"}, "package_name": {"anyOf": [{"type": "string", "minLength": 1}, {"type": "null"}], "title": "Package Name"}, "version": {"anyOf": [{"type": "string", "minLength": 1}, {"type": "null"}], "title": "Version"}}, "additionalProperties": false, "type": "object", "required": ["manifest", "python_interpreter", "label"], "title": "TaskCollectCustomV2", "description": "Attributes:\n    manifest: Manifest of a Fractal task package (this is typically the\n        content of `__FRACTAL_MANIFEST__.json`).\n    python_interpreter: Absolute path to the Python interpreter to be used\n        for running tasks.\n    name: A name identifying this package, that will fill the\n        `TaskGroupV2.pkg_name` column.\n    package_root: The folder where the package is installed.\n        If not provided, it will be extracted via `pip show`\n        (requires `package_name` to be set).\n    package_name: Name of the package, as used for `import <package_name>`;\n        this is then used to extract the package directory (`package_root`)\n        via `pip show <package_name>`.\n    version: Optional version of tasks to be collected."}, "TaskCreateV2": {"properties": {"name": {"type": "string", "minLength": 1, "title": "Name"}, "command_non_parallel": {"type": "string", "minLength": 1, "title": "Command Non Parallel"}, "command_parallel": {"type": "string", "minLength": 1, "title": "Command Parallel"}, "meta_non_parallel": {"anyOf": [{"additionalProperties": true, "type": "object"}, {"type": "null"}], "title": "Meta Non Parallel"}, "meta_parallel": {"anyOf": [{"additionalProperties": true, "type": "object"}, {"type": "null"}], "title": "Meta Parallel"}, "version": {"type": "string", "minLength": 1, "title": "Version"}, "args_schema_non_parallel": {"anyOf": [{"additionalProperties": true, "type": "object"}, {"type": "null"}], "title": "Args Schema Non Parallel"}, "args_schema_parallel": {"anyOf": [{"additionalProperties": true, "type": "object"}, {"type": "null"}], "title": "Args Schema Parallel"}, "args_schema_version": {"type": "string", "minLength": 1, "title": "Args Schema Version"}, "docs_info": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Docs Info"}, "docs_link": {"anyOf": [{"type": "string", "minLength": 1}, {"type": "null"}], "title": "Docs Link"}, "input_types": {"additionalProperties": {"type": "boolean"}, "type": "object", "title": "Input Types", "default": {}}, "output_types": {"additionalProperties": {"type": "boolean"}, "type": "object", "title": "Output Types", "default": {}}, "category": {"anyOf": [{"type": "string", "minLength": 1}, {"type": "null"}], "title": "Category"}, "modality": {"anyOf": [{"type": "string", "minLength": 1}, {"type": "null"}], "title": "Modality"}, "tags": {"items": {"type": "string", "minLength": 1}, "type": "array", "title": "Tags"}, "authors": {"anyOf": [{"type": "string", "minLength": 1}, {"type": "null"}], "title": "Authors"}, "type": {"anyOf": [{"$ref": "#/components/schemas/TaskType"}, {"type": "null"}]}}, "additionalProperties": false, "type": "object", "required": ["name"], "title": "TaskCreateV2"}, "TaskExportV2": {"properties": {"pkg_name": {"type": "string", "minLength": 1, "title": "Pkg Name"}, "version": {"anyOf": [{"type": "string", "minLength": 1}, {"type": "null"}], "title": "Version"}, "name": {"type": "string", "minLength": 1, "title": "Name"}}, "type": "object", "required": ["pkg_name", "name"], "title": "TaskExportV2"}, "TaskGroupActivityActionV2": {"type": "string", "enum": ["collect", "deactivate", "reactivate", "delete"], "title": "TaskGroupActivityActionV2"}, "TaskGroupActivityStatusV2": {"type": "string", "enum": ["pending", "ongoing", "failed", "OK"], "title": "TaskGroupActivityStatusV2"}, "TaskGroupActivityV2Read": {"properties": {"id": {"type": "integer", "title": "Id"}, "user_id": {"type": "integer", "title": "User Id"}, "taskgroupv2_id": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Taskgroupv2 Id"}, "timestamp_started": {"type": "string", "title": "Timestamp Started"}, "timestamp_ended": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Timestamp Ended"}, "pkg_name": {"type": "string", "title": "Pkg Name"}, "version": {"type": "string", "title": "Version"}, "status": {"$ref": "#/components/schemas/TaskGroupActivityStatusV2"}, "action": {"$ref": "#/components/schemas/TaskGroupActivityActionV2"}, "log": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Log"}}, "type": "object", "required": ["id", "user_id", "timestamp_started", "pkg_name", "version", "status", "action"], "title": "TaskGroupActivityV2Read"}, "TaskGroupReadSuperuser": {"properties": {"id": {"type": "integer", "title": "Id"}, "task_list": {"items": {"$ref": "#/components/schemas/TaskReadV2"}, "type": "array", "title": "Task List"}, "user_id": {"type": "integer", "title": "User Id"}, "user_group_id": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "User Group Id"}, "origin": {"$ref": "#/components/schemas/TaskGroupV2OriginEnum"}, "pkg_name": {"type": "string", "title": "Pkg Name"}, "version": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Version"}, "python_version": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Python Version"}, "pixi_version": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Pixi Version"}, "path": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Path"}, "venv_path": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Venv Path"}, "archive_path": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Archive Path"}, "pip_extras": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Pip Extras"}, "pinned_package_versions_pre": {"additionalProperties": {"type": "string"}, "type": "object", "title": "Pinned Package Versions Pre"}, "pinned_package_versions_post": {"additionalProperties": {"type": "string"}, "type": "object", "title": "Pinned Package Versions Post"}, "venv_size_in_kB": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Venv Size In Kb"}, "venv_file_number": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Venv File Number"}, "active": {"type": "boolean", "title": "Active"}, "timestamp_created": {"type": "string", "title": "Timestamp Created"}, "timestamp_last_used": {"type": "string", "title": "Timestamp Last Used"}, "resource_id": {"type": "integer", "title": "Resource Id"}}, "type": "object", "required": ["id", "task_list", "user_id", "origin", "pkg_name", "active", "timestamp_created", "timestamp_last_used", "resource_id"], "title": "TaskGroupReadSuperuser"}, "TaskGroupReadV2": {"properties": {"id": {"type": "integer", "title": "Id"}, "task_list": {"items": {"$ref": "#/components/schemas/TaskReadV2"}, "type": "array", "title": "Task List"}, "user_id": {"type": "integer", "title": "User Id"}, "user_group_id": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "User Group Id"}, "origin": {"$ref": "#/components/schemas/TaskGroupV2OriginEnum"}, "pkg_name": {"type": "string", "title": "Pkg Name"}, "version": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Version"}, "python_version": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Python Version"}, "pixi_version": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Pixi Version"}, "path": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Path"}, "venv_path": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Venv Path"}, "archive_path": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Archive Path"}, "pip_extras": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Pip Extras"}, "pinned_package_versions_pre": {"additionalProperties": {"type": "string"}, "type": "object", "title": "Pinned Package Versions Pre"}, "pinned_package_versions_post": {"additionalProperties": {"type": "string"}, "type": "object", "title": "Pinned Package Versions Post"}, "venv_size_in_kB": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Venv Size In Kb"}, "venv_file_number": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Venv File Number"}, "active": {"type": "boolean", "title": "Active"}, "timestamp_created": {"type": "string", "title": "Timestamp Created"}, "timestamp_last_used": {"type": "string", "title": "Timestamp Last Used"}}, "type": "object", "required": ["id", "task_list", "user_id", "origin", "pkg_name", "active", "timestamp_created", "timestamp_last_used"], "title": "TaskGroupReadV2"}, "TaskGroupUpdateV2": {"properties": {"user_group_id": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "User Group Id"}}, "additionalProperties": false, "type": "object", "title": "TaskGroupUpdateV2"}, "TaskGroupV2OriginEnum": {"type": "string", "enum": ["pypi", "wheel-file", "pixi", "other"], "title": "TaskGroupV2OriginEnum"}, "TaskImportV2": {"properties": {"pkg_name": {"type": "string", "minLength": 1, "title": "Pkg Name"}, "version": {"anyOf": [{"type": "string", "minLength": 1}, {"type": "null"}], "title": "Version"}, "name": {"type": "string", "minLength": 1, "title": "Name"}}, "additionalProperties": false, "type": "object", "required": ["pkg_name", "name"], "title": "TaskImportV2"}, "TaskImportV2Legacy": {"properties": {"source": {"type": "string", "minLength": 1, "title": "Source"}}, "type": "object", "required": ["source"], "title": "TaskImportV2Legacy"}, "TaskManifestV2": {"properties": {"name": {"type": "string", "title": "Name"}, "executable_non_parallel": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Executable Non Parallel"}, "executable_parallel": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Executable Parallel"}, "input_types": {"additionalProperties": {"type": "boolean"}, "type": "object", "title": "Input Types"}, "output_types": {"additionalProperties": {"type": "boolean"}, "type": "object", "title": "Output Types"}, "meta_non_parallel": {"additionalProperties": true, "type": "object", "title": "Meta Non Parallel"}, "meta_parallel": {"additionalProperties": true, "type": "object", "title": "Meta Parallel"}, "args_schema_non_parallel": {"anyOf": [{"additionalProperties": true, "type": "object"}, {"type": "null"}], "title": "Args Schema Non Parallel"}, "args_schema_parallel": {"anyOf": [{"additionalProperties": true, "type": "object"}, {"type": "null"}], "title": "Args Schema Parallel"}, "docs_info": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Docs Info"}, "docs_link": {"anyOf": [{"type": "string", "minLength": 1}, {"type": "null"}], "title": "Docs Link"}, "category": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Category"}, "modality": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Modality"}, "tags": {"items": {"type": "string"}, "type": "array", "title": "Tags"}, "type": {"anyOf": [{"$ref": "#/components/schemas/TaskType"}, {"type": "null"}]}}, "type": "object", "required": ["name"], "title": "TaskManifestV2", "description": "Represents a task within a V2 manifest.\n\nAttributes:\n    name:\n        The task name\n    executable:\n        Path to the executable relative to the package root\n\n        Note: by package root we mean \"as it will be installed\". If a\n        package `Pkg` installs in the folder `pkg` the executable\n        `pkg/executable.py`, this attribute must contain only\n        `executable.py`.\n    input_type:\n        The input type accepted by the task\n    output_type:\n        The output type returned by the task\n    meta:\n        Additional information about the package, such as hash of the\n        executable, specific runtime requirements (e.g., need_gpu=True),\n        etc.\n    args_schema:\n        JSON Schema for task arguments\n    docs_info:\n        Additional information about the Task, coming from the docstring.\n    docs_link:\n        Link to Task docs."}, "TaskReadV2": {"properties": {"id": {"type": "integer", "title": "Id"}, "name": {"type": "string", "title": "Name"}, "type": {"$ref": "#/components/schemas/TaskType"}, "source": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Source"}, "version": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Version"}, "command_non_parallel": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Command Non Parallel"}, "command_parallel": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Command Parallel"}, "meta_parallel": {"additionalProperties": true, "type": "object", "title": "Meta Parallel"}, "meta_non_parallel": {"additionalProperties": true, "type": "object", "title": "Meta Non Parallel"}, "args_schema_non_parallel": {"anyOf": [{"additionalProperties": true, "type": "object"}, {"type": "null"}], "title": "Args Schema Non Parallel"}, "args_schema_parallel": {"anyOf": [{"additionalProperties": true, "type": "object"}, {"type": "null"}], "title": "Args Schema Parallel"}, "args_schema_version": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Args Schema Version"}, "docs_info": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Docs Info"}, "docs_link": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Docs Link"}, "input_types": {"additionalProperties": {"type": "boolean"}, "type": "object", "title": "Input Types"}, "output_types": {"additionalProperties": {"type": "boolean"}, "type": "object", "title": "Output Types"}, "taskgroupv2_id": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Taskgroupv2 Id"}, "category": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Category"}, "modality": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Modality"}, "authors": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Authors"}, "tags": {"items": {"type": "string"}, "type": "array", "title": "Tags"}}, "type": "object", "required": ["id", "name", "type", "meta_parallel", "meta_non_parallel", "input_types", "output_types", "tags"], "title": "TaskReadV2"}, "TaskType": {"type": "string", "enum": ["compound", "converter_compound", "non_parallel", "converter_non_parallel", "parallel"], "title": "TaskType", "description": "Define the available task types."}, "TaskUpdateV2": {"properties": {"command_parallel": {"type": "string", "minLength": 1, "title": "Command Parallel"}, "command_non_parallel": {"type": "string", "minLength": 1, "title": "Command Non Parallel"}, "input_types": {"additionalProperties": {"type": "boolean"}, "type": "object", "title": "Input Types"}, "output_types": {"additionalProperties": {"type": "boolean"}, "type": "object", "title": "Output Types"}, "category": {"anyOf": [{"type": "string", "minLength": 1}, {"type": "null"}], "title": "Category"}, "modality": {"anyOf": [{"type": "string", "minLength": 1}, {"type": "null"}], "title": "Modality"}, "authors": {"anyOf": [{"type": "string", "minLength": 1}, {"type": "null"}], "title": "Authors"}, "tags": {"anyOf": [{"items": {"type": "string", "minLength": 1}, "type": "array"}, {"type": "null"}], "title": "Tags"}}, "additionalProperties": false, "type": "object", "title": "TaskUpdateV2"}, "TaskV2Info-Input": {"properties": {"task": {"$ref": "#/components/schemas/TaskV2Minimal"}, "relationships": {"items": {"$ref": "#/components/schemas/TaskV2Relationship"}, "type": "array", "title": "Relationships"}}, "type": "object", "required": ["task", "relationships"], "title": "TaskV2Info"}, "TaskV2Info-Output": {"properties": {"task": {"$ref": "#/components/schemas/TaskV2Minimal"}, "relationships": {"items": {"$ref": "#/components/schemas/TaskV2Relationship"}, "type": "array", "title": "Relationships"}}, "type": "object", "required": ["task", "relationships"], "title": "TaskV2Info"}, "TaskV2Minimal": {"properties": {"id": {"type": "integer", "title": "Id"}, "name": {"type": "string", "title": "Name"}, "type": {"type": "string", "title": "Type"}, "taskgroupv2_id": {"type": "integer", "title": "Taskgroupv2 Id"}, "command_non_parallel": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Command Non Parallel"}, "command_parallel": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Command Parallel"}, "source": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Source"}, "version": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Version"}}, "type": "object", "required": ["id", "name", "type", "taskgroupv2_id"], "title": "TaskV2Minimal"}, "TaskV2Relationship": {"properties": {"workflow_id": {"type": "integer", "title": "Workflow Id"}, "workflow_name": {"type": "string", "title": "Workflow Name"}, "project_id": {"type": "integer", "title": "Project Id"}, "project_name": {"type": "string", "title": "Project Name"}, "project_users": {"items": {"$ref": "#/components/schemas/ProjectUser"}, "type": "array", "title": "Project Users"}}, "type": "object", "required": ["workflow_id", "workflow_name", "project_id", "project_name"], "title": "TaskV2Relationship"}, "TaskVersionRead": {"properties": {"task_id": {"type": "integer", "title": "Task Id"}, "version": {"type": "string", "title": "Version"}}, "type": "object", "required": ["task_id", "version"], "title": "TaskVersionRead"}, "TasksPythonSettings": {"properties": {"default_version": {"type": "string", "minLength": 1, "title": "Default Version"}, "versions": {"additionalProperties": {"type": "string", "minLength": 1}, "propertyNames": {"enum": ["3.9", "3.10", "3.11", "3.12", "3.13", "3.14"]}, "type": "object", "title": "Versions"}, "pip_cache_dir": {"anyOf": [{"type": "string", "minLength": 1}, {"type": "null"}], "title": "Pip Cache Dir"}}, "type": "object", "required": ["default_version", "versions"], "title": "TasksPythonSettings", "description": "Configuration for the Python base interpreters to be used for task venvs.\n\nFor task collection to work, there must be one or more base Python\ninterpreters available on your system."}, "UserCreate": {"properties": {"email": {"type": "string", "format": "email", "title": "Email"}, "password": {"type": "string", "title": "Password"}, "is_active": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Is Active", "default": true}, "is_superuser": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Is Superuser", "default": false}, "is_verified": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Is Verified", "default": false}, "profile_id": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Profile Id"}, "project_dir": {"type": "string", "minLength": 1, "title": "Project Dir"}, "slurm_accounts": {"items": {"type": "string"}, "type": "array", "title": "Slurm Accounts"}}, "type": "object", "required": ["email", "password", "project_dir"], "title": "UserCreate", "description": "Schema for `User` creation.\n\nAttributes:\n    profile_id:"}, "UserGroupCreate": {"properties": {"name": {"type": "string", "title": "Name"}, "viewer_paths": {"items": {"type": "string", "minLength": 1}, "type": "array", "title": "Viewer Paths"}}, "additionalProperties": false, "type": "object", "required": ["name"], "title": "UserGroupCreate", "description": "Schema for `UserGroup` creation\n\nAttributes:\n    name: Group name"}, "UserGroupRead": {"properties": {"id": {"type": "integer", "title": "Id"}, "name": {"type": "string", "title": "Name"}, "timestamp_created": {"type": "string", "title": "Timestamp Created"}, "user_ids": {"anyOf": [{"items": {"type": "integer"}, "type": "array"}, {"type": "null"}], "title": "User Ids"}, "viewer_paths": {"items": {"type": "string"}, "type": "array", "title": "Viewer Paths"}}, "type": "object", "required": ["id", "name", "timestamp_created", "viewer_paths"], "title": "UserGroupRead", "description": "Schema for `UserGroup` read\n\nNOTE: `user_ids` does not correspond to a column of the `UserGroup` table,\nbut it is rather computed dynamically in relevant endpoints.\n\nAttributes:\n    id: Group ID\n    name: Group name\n    timestamp_created: Creation timestamp\n    user_ids: IDs of users of this group"}, "UserGroupUpdate": {"properties": {"viewer_paths": {"items": {"type": "string", "minLength": 1}, "type": "array", "title": "Viewer Paths"}}, "additionalProperties": false, "type": "object", "title": "UserGroupUpdate", "description": "Schema for `UserGroup` update"}, "UserProfileInfo": {"properties": {"has_profile": {"type": "boolean", "title": "Has Profile"}, "resource_name": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Resource Name"}, "profile_name": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Profile Name"}, "username": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Username"}}, "type": "object", "required": ["has_profile"], "title": "UserProfileInfo"}, "UserRead": {"properties": {"id": {"type": "integer", "title": "Id"}, "email": {"type": "string", "format": "email", "title": "Email"}, "is_active": {"type": "boolean", "title": "Is Active", "default": true}, "is_superuser": {"type": "boolean", "title": "Is Superuser", "default": false}, "is_verified": {"type": "boolean", "title": "Is Verified", "default": false}, "group_ids_names": {"anyOf": [{"items": {"prefixItems": [{"type": "integer"}, {"type": "string"}], "type": "array", "maxItems": 2, "minItems": 2}, "type": "array"}, {"type": "null"}], "title": "Group Ids Names"}, "oauth_accounts": {"items": {"$ref": "#/components/schemas/OAuthAccountRead"}, "type": "array", "title": "Oauth Accounts"}, "profile_id": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Profile Id"}, "project_dir": {"type": "string", "title": "Project Dir"}, "slurm_accounts": {"items": {"type": "string"}, "type": "array", "title": "Slurm Accounts"}}, "type": "object", "required": ["id", "email", "oauth_accounts", "project_dir", "slurm_accounts"], "title": "UserRead", "description": "Schema for `User` read from database.\n\nAttributes:\n    group_ids_names:\n    oauth_accounts:\n    profile_id:"}, "UserUpdate": {"properties": {"password": {"type": "string", "minLength": 1, "title": "Password"}, "email": {"type": "string", "format": "email", "title": "Email"}, "is_active": {"type": "boolean", "title": "Is Active"}, "is_superuser": {"type": "boolean", "title": "Is Superuser"}, "is_verified": {"type": "boolean", "title": "Is Verified"}, "profile_id": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Profile Id"}, "project_dir": {"type": "string", "minLength": 1, "title": "Project Dir"}, "slurm_accounts": {"items": {"type": "string", "minLength": 1}, "type": "array", "title": "Slurm Accounts"}}, "additionalProperties": false, "type": "object", "title": "UserUpdate", "description": "Schema for `User` update.\n\nAttributes:\n    password:\n    email:\n    is_active:\n    is_superuser:\n    is_verified:\n    profile_id:\n    project_dir:\n    slurm_accounts:"}, "UserUpdateGroups": {"properties": {"group_ids": {"items": {"type": "integer", "minimum": 0.0}, "type": "array", "minItems": 1, "title": "Group Ids"}}, "additionalProperties": false, "type": "object", "required": ["group_ids"], "title": "UserUpdateGroups", "description": "Schema for `POST /auth/users/{user_id}/set-groups/`"}, "UserUpdateStrict": {"properties": {"slurm_accounts": {"items": {"type": "string", "minLength": 1}, "type": "array", "title": "Slurm Accounts"}}, "additionalProperties": false, "type": "object", "title": "UserUpdateStrict", "description": "Schema for `User` self-editing.\n\nAttributes:\n    slurm_accounts:"}, "ValidProfileLocal": {"properties": {"name": {"type": "string", "minLength": 1, "title": "Name"}, "resource_type": {"$ref": "#/components/schemas/ResourceType"}, "username": {"type": "null", "title": "Username"}, "ssh_key_path": {"type": "null", "title": "Ssh Key Path"}, "jobs_remote_dir": {"type": "null", "title": "Jobs Remote Dir"}, "tasks_remote_dir": {"type": "null", "title": "Tasks Remote Dir"}}, "type": "object", "required": ["name", "resource_type"], "title": "ValidProfileLocal"}, "ValidProfileSlurmSSH": {"properties": {"name": {"type": "string", "minLength": 1, "title": "Name"}, "resource_type": {"$ref": "#/components/schemas/ResourceType"}, "username": {"type": "string", "minLength": 1, "title": "Username"}, "ssh_key_path": {"type": "string", "minLength": 1, "title": "Ssh Key Path"}, "jobs_remote_dir": {"type": "string", "minLength": 1, "title": "Jobs Remote Dir"}, "tasks_remote_dir": {"type": "string", "minLength": 1, "title": "Tasks Remote Dir"}}, "type": "object", "required": ["name", "resource_type", "username", "ssh_key_path", "jobs_remote_dir", "tasks_remote_dir"], "title": "ValidProfileSlurmSSH"}, "ValidProfileSlurmSudo": {"properties": {"name": {"type": "string", "minLength": 1, "title": "Name"}, "resource_type": {"$ref": "#/components/schemas/ResourceType"}, "username": {"type": "string", "minLength": 1, "title": "Username"}, "ssh_key_path": {"type": "null", "title": "Ssh Key Path"}, "jobs_remote_dir": {"type": "null", "title": "Jobs Remote Dir"}, "tasks_remote_dir": {"type": "null", "title": "Tasks Remote Dir"}}, "type": "object", "required": ["name", "resource_type", "username"], "title": "ValidProfileSlurmSudo"}, "ValidResourceLocal": {"properties": {"type": {"type": "string", "const": "local", "title": "Type"}, "name": {"type": "string", "minLength": 1, "title": "Name"}, "tasks_python_config": {"$ref": "#/components/schemas/TasksPythonSettings"}, "tasks_pixi_config": {"additionalProperties": true, "propertyNames": {"minLength": 1}, "type": "object", "title": "Tasks Pixi Config"}, "tasks_local_dir": {"type": "string", "minLength": 1, "title": "Tasks Local Dir"}, "jobs_local_dir": {"type": "string", "minLength": 1, "title": "Jobs Local Dir"}, "jobs_runner_config": {"$ref": "#/components/schemas/JobRunnerConfigLocal"}, "jobs_poll_interval": {"type": "integer", "title": "Jobs Poll Interval", "default": 5}, "jobs_slurm_python_worker": {"type": "null", "title": "Jobs Slurm Python Worker"}, "host": {"type": "null", "title": "Host"}}, "type": "object", "required": ["type", "name", "tasks_python_config", "tasks_pixi_config", "tasks_local_dir", "jobs_local_dir", "jobs_runner_config"], "title": "ValidResourceLocal"}, "ValidResourceSlurmSSH": {"properties": {"type": {"type": "string", "const": "slurm_ssh", "title": "Type"}, "name": {"type": "string", "minLength": 1, "title": "Name"}, "tasks_python_config": {"$ref": "#/components/schemas/TasksPythonSettings"}, "tasks_pixi_config": {"additionalProperties": true, "propertyNames": {"minLength": 1}, "type": "object", "title": "Tasks Pixi Config"}, "tasks_local_dir": {"type": "string", "minLength": 1, "title": "Tasks Local Dir"}, "jobs_local_dir": {"type": "string", "minLength": 1, "title": "Jobs Local Dir"}, "jobs_runner_config": {"$ref": "#/components/schemas/JobRunnerConfigSLURM"}, "jobs_poll_interval": {"type": "integer", "title": "Jobs Poll Interval", "default": 5}, "host": {"type": "string", "minLength": 1, "title": "Host"}, "jobs_slurm_python_worker": {"type": "string", "minLength": 1, "title": "Jobs Slurm Python Worker"}}, "type": "object", "required": ["type", "name", "tasks_python_config", "tasks_pixi_config", "tasks_local_dir", "jobs_local_dir", "jobs_runner_config", "host", "jobs_slurm_python_worker"], "title": "ValidResourceSlurmSSH"}, "ValidResourceSlurmSudo": {"properties": {"type": {"type": "string", "const": "slurm_sudo", "title": "Type"}, "name": {"type": "string", "minLength": 1, "title": "Name"}, "tasks_python_config": {"$ref": "#/components/schemas/TasksPythonSettings"}, "tasks_pixi_config": {"additionalProperties": true, "propertyNames": {"minLength": 1}, "type": "object", "title": "Tasks Pixi Config"}, "tasks_local_dir": {"type": "string", "minLength": 1, "title": "Tasks Local Dir"}, "jobs_local_dir": {"type": "string", "minLength": 1, "title": "Jobs Local Dir"}, "jobs_runner_config": {"$ref": "#/components/schemas/JobRunnerConfigSLURM"}, "jobs_poll_interval": {"type": "integer", "title": "Jobs Poll Interval", "default": 5}, "jobs_slurm_python_worker": {"type": "string", "minLength": 1, "title": "Jobs Slurm Python Worker"}, "host": {"type": "null", "title": "Host"}}, "type": "object", "required": ["type", "name", "tasks_python_config", "tasks_pixi_config", "tasks_local_dir", "jobs_local_dir", "jobs_runner_config", "jobs_slurm_python_worker"], "title": "ValidResourceSlurmSudo"}, "ValidationError": {"properties": {"loc": {"items": {"anyOf": [{"type": "string"}, {"type": "integer"}]}, "type": "array", "title": "Location"}, "msg": {"type": "string", "title": "Message"}, "type": {"type": "string", "title": "Error Type"}}, "type": "object", "required": ["loc", "msg", "type"], "title": "ValidationError"}, "WorkflowCreateV2": {"properties": {"name": {"type": "string", "minLength": 1, "title": "Name"}}, "additionalProperties": false, "type": "object", "required": ["name"], "title": "WorkflowCreateV2"}, "WorkflowDumpV2": {"properties": {"id": {"type": "integer", "title": "Id"}, "name": {"type": "string", "title": "Name"}, "project_id": {"type": "integer", "title": "Project Id"}, "timestamp_created": {"type": "string", "title": "Timestamp Created"}}, "additionalProperties": false, "type": "object", "required": ["id", "name", "project_id", "timestamp_created"], "title": "WorkflowDumpV2"}, "WorkflowExportV2": {"properties": {"name": {"type": "string", "title": "Name"}, "task_list": {"items": {"$ref": "#/components/schemas/WorkflowTaskExportV2"}, "type": "array", "title": "Task List"}}, "type": "object", "required": ["name", "task_list"], "title": "WorkflowExportV2", "description": "Class for `Workflow` export.\n\nAttributes:\n    task_list:"}, "WorkflowImportV2": {"properties": {"name": {"type": "string", "minLength": 1, "title": "Name"}, "task_list": {"items": {"$ref": "#/components/schemas/WorkflowTaskImportV2"}, "type": "array", "title": "Task List"}}, "additionalProperties": false, "type": "object", "required": ["name", "task_list"], "title": "WorkflowImportV2", "description": "Class for `Workflow` import.\n\nAttributes:\n    task_list:"}, "WorkflowReadV2": {"properties": {"id": {"type": "integer", "title": "Id"}, "name": {"type": "string", "title": "Name"}, "project_id": {"type": "integer", "title": "Project Id"}, "task_list": {"items": {"$ref": "#/components/schemas/WorkflowTaskReadV2"}, "type": "array", "title": "Task List"}, "project": {"$ref": "#/components/schemas/ProjectReadV2"}, "timestamp_created": {"type": "string", "title": "Timestamp Created"}}, "type": "object", "required": ["id", "name", "project_id", "task_list", "project", "timestamp_created"], "title": "WorkflowReadV2"}, "WorkflowReadV2WithWarnings": {"properties": {"id": {"type": "integer", "title": "Id"}, "name": {"type": "string", "title": "Name"}, "project_id": {"type": "integer", "title": "Project Id"}, "task_list": {"items": {"$ref": "#/components/schemas/WorkflowTaskReadV2WithWarning-Output"}, "type": "array", "title": "Task List"}, "project": {"$ref": "#/components/schemas/ProjectReadV2"}, "timestamp_created": {"type": "string", "title": "Timestamp Created"}}, "type": "object", "required": ["id", "name", "project_id", "task_list", "project", "timestamp_created"], "title": "WorkflowReadV2WithWarnings"}, "WorkflowTaskCreateV2": {"properties": {"meta_non_parallel": {"anyOf": [{"additionalProperties": true, "type": "object"}, {"type": "null"}], "title": "Meta Non Parallel"}, "meta_parallel": {"anyOf": [{"additionalProperties": true, "type": "object"}, {"type": "null"}], "title": "Meta Parallel"}, "args_non_parallel": {"anyOf": [{"additionalProperties": true, "type": "object"}, {"type": "null"}], "title": "Args Non Parallel"}, "args_parallel": {"anyOf": [{"additionalProperties": true, "type": "object"}, {"type": "null"}], "title": "Args Parallel"}, "type_filters": {"additionalProperties": {"type": "boolean"}, "type": "object", "title": "Type Filters"}}, "additionalProperties": false, "type": "object", "title": "WorkflowTaskCreateV2"}, "WorkflowTaskExportV2": {"properties": {"meta_non_parallel": {"anyOf": [{"additionalProperties": true, "type": "object"}, {"type": "null"}], "title": "Meta Non Parallel"}, "meta_parallel": {"anyOf": [{"additionalProperties": true, "type": "object"}, {"type": "null"}], "title": "Meta Parallel"}, "args_non_parallel": {"anyOf": [{"additionalProperties": true, "type": "object"}, {"type": "null"}], "title": "Args Non Parallel"}, "args_parallel": {"anyOf": [{"additionalProperties": true, "type": "object"}, {"type": "null"}], "title": "Args Parallel"}, "type_filters": {"additionalProperties": {"type": "boolean"}, "type": "object", "title": "Type Filters"}, "task": {"$ref": "#/components/schemas/TaskExportV2"}}, "type": "object", "required": ["task"], "title": "WorkflowTaskExportV2"}, "WorkflowTaskImportV2": {"properties": {"meta_non_parallel": {"anyOf": [{"additionalProperties": true, "type": "object"}, {"type": "null"}], "title": "Meta Non Parallel"}, "meta_parallel": {"anyOf": [{"additionalProperties": true, "type": "object"}, {"type": "null"}], "title": "Meta Parallel"}, "args_non_parallel": {"anyOf": [{"additionalProperties": true, "type": "object"}, {"type": "null"}], "title": "Args Non Parallel"}, "args_parallel": {"anyOf": [{"additionalProperties": true, "type": "object"}, {"type": "null"}], "title": "Args Parallel"}, "type_filters": {"anyOf": [{"additionalProperties": {"type": "boolean"}, "type": "object"}, {"type": "null"}], "title": "Type Filters"}, "input_filters": {"anyOf": [{"additionalProperties": true, "type": "object"}, {"type": "null"}], "title": "Input Filters"}, "task": {"anyOf": [{"$ref": "#/components/schemas/TaskImportV2"}, {"$ref": "#/components/schemas/TaskImportV2Legacy"}], "title": "Task"}}, "additionalProperties": false, "type": "object", "required": ["task"], "title": "WorkflowTaskImportV2"}, "WorkflowTaskReadV2": {"properties": {"id": {"type": "integer", "title": "Id"}, "workflow_id": {"type": "integer", "title": "Workflow Id"}, "order": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Order"}, "meta_non_parallel": {"anyOf": [{"additionalProperties": true, "type": "object"}, {"type": "null"}], "title": "Meta Non Parallel"}, "meta_parallel": {"anyOf": [{"additionalProperties": true, "type": "object"}, {"type": "null"}], "title": "Meta Parallel"}, "args_non_parallel": {"anyOf": [{"additionalProperties": true, "type": "object"}, {"type": "null"}], "title": "Args Non Parallel"}, "args_parallel": {"anyOf": [{"additionalProperties": true, "type": "object"}, {"type": "null"}], "title": "Args Parallel"}, "type_filters": {"additionalProperties": {"type": "boolean"}, "type": "object", "title": "Type Filters"}, "task_type": {"$ref": "#/components/schemas/TaskType"}, "task_id": {"type": "integer", "title": "Task Id"}, "task": {"$ref": "#/components/schemas/TaskReadV2"}}, "type": "object", "required": ["id", "workflow_id", "type_filters", "task_type", "task_id", "task"], "title": "WorkflowTaskReadV2"}, "WorkflowTaskReadV2WithWarning-Input": {"properties": {"id": {"type": "integer", "title": "Id"}, "workflow_id": {"type": "integer", "title": "Workflow Id"}, "order": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Order"}, "meta_non_parallel": {"anyOf": [{"additionalProperties": true, "type": "object"}, {"type": "null"}], "title": "Meta Non Parallel"}, "meta_parallel": {"anyOf": [{"additionalProperties": true, "type": "object"}, {"type": "null"}], "title": "Meta Parallel"}, "args_non_parallel": {"anyOf": [{"additionalProperties": true, "type": "object"}, {"type": "null"}], "title": "Args Non Parallel"}, "args_parallel": {"anyOf": [{"additionalProperties": true, "type": "object"}, {"type": "null"}], "title": "Args Parallel"}, "type_filters": {"additionalProperties": {"type": "boolean"}, "type": "object", "title": "Type Filters"}, "task_type": {"$ref": "#/components/schemas/TaskType"}, "task_id": {"type": "integer", "title": "Task Id"}, "task": {"$ref": "#/components/schemas/TaskReadV2"}, "warning": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Warning"}}, "type": "object", "required": ["id", "workflow_id", "type_filters", "task_type", "task_id", "task"], "title": "WorkflowTaskReadV2WithWarning"}, "WorkflowTaskReadV2WithWarning-Output": {"properties": {"id": {"type": "integer", "title": "Id"}, "workflow_id": {"type": "integer", "title": "Workflow Id"}, "order": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Order"}, "meta_non_parallel": {"anyOf": [{"additionalProperties": true, "type": "object"}, {"type": "null"}], "title": "Meta Non Parallel"}, "meta_parallel": {"anyOf": [{"additionalProperties": true, "type": "object"}, {"type": "null"}], "title": "Meta Parallel"}, "args_non_parallel": {"anyOf": [{"additionalProperties": true, "type": "object"}, {"type": "null"}], "title": "Args Non Parallel"}, "args_parallel": {"anyOf": [{"additionalProperties": true, "type": "object"}, {"type": "null"}], "title": "Args Parallel"}, "type_filters": {"additionalProperties": {"type": "boolean"}, "type": "object", "title": "Type Filters"}, "task_type": {"$ref": "#/components/schemas/TaskType"}, "task_id": {"type": "integer", "title": "Task Id"}, "task": {"$ref": "#/components/schemas/TaskReadV2"}, "warning": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Warning"}}, "type": "object", "required": ["id", "workflow_id", "type_filters", "task_type", "task_id", "task"], "title": "WorkflowTaskReadV2WithWarning"}, "WorkflowTaskReplaceV2": {"properties": {"args_non_parallel": {"anyOf": [{"additionalProperties": true, "type": "object"}, {"type": "null"}], "title": "Args Non Parallel"}, "args_parallel": {"anyOf": [{"additionalProperties": true, "type": "object"}, {"type": "null"}], "title": "Args Parallel"}}, "type": "object", "title": "WorkflowTaskReplaceV2", "description": "Used by 'replace-task' endpoint"}, "WorkflowTaskStatusTypeV2": {"type": "string", "enum": ["submitted", "done", "failed"], "title": "WorkflowTaskStatusTypeV2", "description": "Define the available values for the status of a `WorkflowTask`.\n\nThis model is used within the `Dataset.history` attribute, which is\nconstructed in the runner and then used in the API (e.g. in the\n`api/v2/project/{project_id}/dataset/{dataset_id}/status` endpoint).\n\nAttributes:\n    SUBMITTED: The `WorkflowTask` is part of a running job.\n    DONE: The most-recent execution of this `WorkflowTask` was successful.\n    FAILED: The most-recent execution of this `WorkflowTask` failed."}, "WorkflowTaskTypeFiltersInfo": {"properties": {"workflowtask_id": {"type": "integer", "title": "Workflowtask Id"}, "current_type_filters": {"additionalProperties": {"type": "boolean"}, "type": "object", "title": "Current Type Filters"}, "input_type_filters": {"additionalProperties": {"type": "boolean"}, "type": "object", "title": "Input Type Filters"}, "output_type_filters": {"additionalProperties": {"type": "boolean"}, "type": "object", "title": "Output Type Filters"}}, "type": "object", "required": ["workflowtask_id", "current_type_filters", "input_type_filters", "output_type_filters"], "title": "WorkflowTaskTypeFiltersInfo"}, "WorkflowTaskUpdateV2": {"properties": {"meta_non_parallel": {"anyOf": [{"additionalProperties": true, "type": "object"}, {"type": "null"}], "title": "Meta Non Parallel"}, "meta_parallel": {"anyOf": [{"additionalProperties": true, "type": "object"}, {"type": "null"}], "title": "Meta Parallel"}, "args_non_parallel": {"anyOf": [{"additionalProperties": true, "type": "object"}, {"type": "null"}], "title": "Args Non Parallel"}, "args_parallel": {"anyOf": [{"additionalProperties": true, "type": "object"}, {"type": "null"}], "title": "Args Parallel"}, "type_filters": {"additionalProperties": {"type": "boolean"}, "type": "object", "title": "Type Filters"}}, "additionalProperties": false, "type": "object", "title": "WorkflowTaskUpdateV2"}, "WorkflowUpdateV2": {"properties": {"name": {"type": "string", "minLength": 1, "title": "Name"}, "reordered_workflowtask_ids": {"anyOf": [{"items": {"type": "integer", "minimum": 0.0}, "type": "array"}, {"type": "null"}], "title": "Reordered Workflowtask Ids"}}, "additionalProperties": false, "type": "object", "title": "WorkflowUpdateV2"}, "_BatchingConfigSet": {"properties": {"target_num_jobs": {"type": "integer", "exclusiveMinimum": 0.0, "title": "Target Num Jobs"}, "max_num_jobs": {"type": "integer", "exclusiveMinimum": 0.0, "title": "Max Num Jobs"}, "target_cpus_per_job": {"type": "integer", "exclusiveMinimum": 0.0, "title": "Target Cpus Per Job"}, "max_cpus_per_job": {"type": "integer", "exclusiveMinimum": 0.0, "title": "Max Cpus Per Job"}, "target_mem_per_job": {"anyOf": [{"type": "integer", "exclusiveMinimum": 0.0}, {"type": "string", "minLength": 1}], "title": "Target Mem Per Job"}, "max_mem_per_job": {"anyOf": [{"type": "integer", "exclusiveMinimum": 0.0}, {"type": "string", "minLength": 1}], "title": "Max Mem Per Job"}}, "additionalProperties": false, "type": "object", "required": ["target_num_jobs", "max_num_jobs", "target_cpus_per_job", "max_cpus_per_job", "target_mem_per_job", "max_mem_per_job"], "title": "_BatchingConfigSet", "description": "Options to configure the batching strategy (that is, how to combine\nseveral tasks in a single SLURM job).\n\nAttributes:\n    target_cpus_per_job:\n    max_cpus_per_job:\n    target_mem_per_job:\n        (see `_parse_mem_value` for details on allowed values)\n    max_mem_per_job:\n        (see `_parse_mem_value` for details on allowed values)\n    target_num_jobs:\n    max_num_jobs:"}, "_SlurmConfigSet": {"properties": {"partition": {"anyOf": [{"type": "string", "minLength": 1}, {"type": "null"}], "title": "Partition"}, "cpus_per_task": {"anyOf": [{"type": "integer", "exclusiveMinimum": 0.0}, {"type": "null"}], "title": "Cpus Per Task"}, "mem": {"anyOf": [{"type": "integer", "exclusiveMinimum": 0.0}, {"type": "string", "minLength": 1}, {"type": "null"}], "title": "Mem"}, "constraint": {"anyOf": [{"type": "string", "minLength": 1}, {"type": "null"}], "title": "Constraint"}, "gres": {"anyOf": [{"type": "string", "minLength": 1}, {"type": "null"}], "title": "Gres"}, "exclude": {"anyOf": [{"type": "string", "minLength": 1}, {"type": "null"}], "title": "Exclude"}, "nodelist": {"anyOf": [{"type": "string", "minLength": 1}, {"type": "null"}], "title": "Nodelist"}, "time": {"anyOf": [{"type": "string", "minLength": 1}, {"type": "null"}], "title": "Time"}, "account": {"anyOf": [{"type": "string", "minLength": 1}, {"type": "null"}], "title": "Account"}, "extra_lines": {"items": {"type": "string", "minLength": 1}, "type": "array", "title": "Extra Lines"}, "gpus": {"anyOf": [{"type": "string", "minLength": 1}, {"type": "null"}], "title": "Gpus"}}, "additionalProperties": false, "type": "object", "title": "_SlurmConfigSet", "description": "Options for the default or gpu SLURM config.\n\nAttributes:\n    partition:\n    cpus_per_task:\n    mem:\n        See `_parse_mem_value` for details on allowed values.\n    constraint:\n    gres:\n    time:\n    exclude:\n    nodelist:\n    account:\n    extra_lines:"}}, "securitySchemes": {"OAuth2PasswordBearer": {"type": "oauth2", "flows": {"password": {"scopes": {}, "tokenUrl": "/auth/token/login"}}}, "APIKeyCookie": {"type": "apiKey", "in": "cookie", "name": "fastapiusersauth"}}}}