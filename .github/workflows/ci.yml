name: ci

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:

  tests_v2:

    name: "V2 - Python ${{ matrix.python-version }}"
    runs-on: ubuntu-22.04
    timeout-minutes: 30

    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    # services:
    #   postgres:
    #     image: 'postgres'
    #     env:
    #       POSTGRES_PASSWORD: postgres
    #       POSTGRES_DB: fractal_test
    #     options: >-
    #       --health-cmd pg_isready
    #       --health-interval 10s
    #       --health-timeout 5s
    #       --health-retries 5
    #     ports:
    #       - 5432:5432

    steps:
      - uses: actions/checkout@v4

      - name: Cache SLURM Docker images
        id: cache-docker-slurm-multipy
        uses: actions/cache@v4
        with:
          path: ci/cache/docker/slurm-multipy
          key: cache-docker-slurm-multipy

      - name: Use SLURM Docker Image Cache if cache hit
        if: steps.cache-docker-slurm-multipy.outputs.cache-hit == 'true'
        run: docker image load --input ./ci/cache/docker/slurm-multipy/slurm-multipy.tar

      - name: Update SLURM Docker Image Cache if cache miss
        if: steps.cache-docker-slurm-multipy.outputs.cache-hit != 'true'
        run: docker pull ghcr.io/fractal-analytics-platform/ubuntu22-slurm-multipy:0.1 && mkdir -p ci/cache/docker/slurm-multipy && docker image save ghcr.io/fractal-analytics-platform/ubuntu22-slurm-multipy:0.1 --output ./ci/cache/docker/slurm-multipy/slurm-multipy.tar

      - name: Install poetry
        run: pipx install poetry==1.8.2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "poetry"

      - name: Install dependencies
        run: |
          poetry install --with dev --without docs --no-interaction

      - name: Test with pytest
        run: poetry run pytest tests/v2/00_ssh/test_FractalSSH.py -s -vvv --log-cli-level info
