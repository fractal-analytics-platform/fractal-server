{
  "args_schema_version": null,
  "has_args_schemas": false,
  "manifest_version": null,
  "task_list": [
    {
      "args_schema": null,
      "docs_info": null,
      "docs_link": null,
      "executable_non_parallel": "create_cellvoyager_ome_zarr.py",
      "executable_parallel": "fill_cellvoyager_ome_zarr.py",
      "input_types": {},
      "meta": {},
      "name": "create_ome_zarr_compound",
      "output_types": {}
    },
    {
      "args_schema": null,
      "docs_info": null,
      "docs_link": null,
      "executable_non_parallel": "create_cellvoyager_ome_zarr_multiplex.py",
      "executable_parallel": "fill_cellvoyager_ome_zarr.py",
      "input_types": {},
      "meta": {},
      "name": "create_ome_zarr_multiplex_compound",
      "output_types": {}
    },
    {
      "args_schema": null,
      "docs_info": null,
      "docs_link": null,
      "executable_non_parallel": "new_ome_zarr.py",
      "executable_parallel": "maximum_intensity_projection.py",
      "input_types": {
        "3D": true
      },
      "meta": {},
      "name": "MIP_compound",
      "output_types": {
        "3D": false
      }
    },
    {
      "args_schema": null,
      "docs_info": null,
      "docs_link": null,
      "executable_non_parallel": null,
      "executable_parallel": "illumination_correction.py",
      "input_types": {
        "illumination_correction": false
      },
      "meta": {},
      "name": "illumination_correction",
      "output_types": {
        "illumination_correction": true
      }
    },
    {
      "args_schema": null,
      "docs_info": null,
      "docs_link": null,
      "executable_non_parallel": "illumination_correction_init.py",
      "executable_parallel": "illumination_correction_compute.py",
      "input_types": {
        "illumination_correction": false
      },
      "meta": {},
      "name": "illumination_correction_compound",
      "output_types": {
        "illumination_correction": true
      }
    },
    {
      "args_schema": null,
      "docs_info": null,
      "docs_link": null,
      "executable_non_parallel": null,
      "executable_parallel": "cellpose_segmentation",
      "input_types": {},
      "meta": {},
      "name": "cellpose_segmentation",
      "output_types": {}
    },
    {
      "args_schema": null,
      "docs_info": null,
      "docs_link": null,
      "executable_non_parallel": "calculate_registration_init.py",
      "executable_parallel": "calculate_registration_compute.py",
      "input_types": {},
      "meta": {},
      "name": "calculate_registration_compound",
      "output_types": {}
    },
    {
      "args_schema": null,
      "docs_info": null,
      "docs_link": null,
      "executable_non_parallel": "find_registration_consensus.py",
      "executable_parallel": null,
      "input_types": {},
      "meta": {},
      "name": "find_registration_consensus",
      "output_types": {}
    },
    {
      "args_schema": null,
      "docs_info": null,
      "docs_link": null,
      "executable_non_parallel": null,
      "executable_parallel": "apply_registration_to_image.py",
      "input_types": {
        "registration": false
      },
      "meta": {},
      "name": "apply_registration_to_image",
      "output_types": {
        "registration": true
      }
    }
  ]
}
